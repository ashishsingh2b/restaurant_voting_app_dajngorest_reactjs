{"ast":null,"code":"var _jsxFileName = \"/home/ts/Desktop/Fullstack Practice/GSO TASK/lunch-vote-frontend/src/components/RestaurantList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantList = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [votesLeft, setVotesLeft] = useState(3);\n  useEffect(() => {\n    // Fetch the list of restaurants\n    axios.get('http://127.0.0.1:8000/api/restaurants/', {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('access_token')}`\n      }\n    }).then(response => {\n      console.log('API Response:', response.data); // Check the format of the data\n      // Ensure response.data is an array or has the array of restaurants\n      setRestaurants(response.data.restaurants || []);\n    }).catch(error => {\n      console.error('Error fetching restaurants', error);\n      // Optionally, handle the error state\n      setRestaurants([]);\n    });\n  }, []);\n  const handleVote = (restaurantId, voteType) => {\n    // Ensure the voteType is valid and votesLeft are available\n    if (votesLeft <= 0) {\n      alert('No votes left for today!');\n      return;\n    }\n    axios.post('http://127.0.0.1:8000/api/restaurants/vote/', {\n      restaurantId,\n      voteType\n    }, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('access_token')}`\n      }\n    }).then(response => {\n      console.log('Vote Response:', response.data); // Log the response for debugging\n      // Ensure response data contains the updated array of restaurants and votesLeft\n      setRestaurants(response.data.restaurants || []);\n      setVotesLeft(response.data.votesLeft || votesLeft);\n    }).catch(error => {\n      console.error('Error voting', error);\n      alert('An error occurred while voting.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Restaurants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Votes left today: \", votesLeft]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(restaurants) && restaurants.length > 0 ? restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [restaurant.name, \" - Votes: \", restaurant.votes, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleVote(restaurant.id, 'first'),\n          children: \"Vote 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleVote(restaurant.id, 'second'),\n          children: \"Vote 0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleVote(restaurant.id, 'third'),\n          children: \"Vote 0.25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, restaurant.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No restaurants available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantList, \"TlDGIY5PvyMJ8sAre9G3n+uEtfU=\");\n_c = RestaurantList;\nexport default RestaurantList;\nvar _c;\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","RestaurantList","_s","restaurants","setRestaurants","votesLeft","setVotesLeft","get","headers","Authorization","localStorage","getItem","then","response","console","log","data","catch","error","handleVote","restaurantId","voteType","alert","post","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","map","restaurant","name","votes","onClick","id","_c","$RefreshReg$"],"sources":["/home/ts/Desktop/Fullstack Practice/GSO TASK/lunch-vote-frontend/src/components/RestaurantList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst RestaurantList = () => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [votesLeft, setVotesLeft] = useState(3);\n\n  useEffect(() => {\n    // Fetch the list of restaurants\n    axios.get('http://127.0.0.1:8000/api/restaurants/', { \n      headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } \n    })\n      .then(response => {\n        console.log('API Response:', response.data);  // Check the format of the data\n        // Ensure response.data is an array or has the array of restaurants\n        setRestaurants(response.data.restaurants || []);\n      })\n      .catch(error => {\n        console.error('Error fetching restaurants', error);\n        // Optionally, handle the error state\n        setRestaurants([]);\n      });\n  }, []);\n\n  const handleVote = (restaurantId, voteType) => {\n    // Ensure the voteType is valid and votesLeft are available\n    if (votesLeft <= 0) {\n      alert('No votes left for today!');\n      return;\n    }\n\n    axios.post('http://127.0.0.1:8000/api/restaurants/vote/', \n      { restaurantId, voteType }, \n      { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n    )\n      .then(response => {\n        console.log('Vote Response:', response.data); // Log the response for debugging\n        // Ensure response data contains the updated array of restaurants and votesLeft\n        setRestaurants(response.data.restaurants || []);\n        setVotesLeft(response.data.votesLeft || votesLeft);\n      })\n      .catch(error => {\n        console.error('Error voting', error);\n        alert('An error occurred while voting.');\n      });\n  };\n\n  return (\n    <div>\n      <h1>Restaurants</h1>\n      <p>Votes left today: {votesLeft}</p>\n      <ul>\n        {Array.isArray(restaurants) && restaurants.length > 0 ? (\n          restaurants.map(restaurant => (\n            <li key={restaurant.id}>\n              {restaurant.name} - Votes: {restaurant.votes} {/* Ensure this matches your API response */}\n              <button onClick={() => handleVote(restaurant.id, 'first')}>Vote 1</button>\n              <button onClick={() => handleVote(restaurant.id, 'second')}>Vote 0.5</button>\n              <button onClick={() => handleVote(restaurant.id, 'third')}>Vote 0.25</button>\n            </li>\n          ))\n        ) : (\n          <p>No restaurants available</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default RestaurantList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}