{"ast":null,"code":"\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// // import './WinnerDisplay.css'; // Import a CSS file for styling if needed\n\n// const WinnerDisplay = () => {\n//   const [winners, setWinners] = useState([]);\n//   const [todaysWinner, setTodaysWinner] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         // Fetch today's winner from API\n//         const fetchTodaysWinner = async () => {\n//           try {\n//             const response = await axios.get('http://127.0.0.1:8000/api/restaurants/history/todays_winner/', {\n//               headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n//             });\n\n//             console.log('Today\\'s Winner Data:', response.data); // Log data here\n\n//             setTodaysWinner(response.data);\n//           } catch (err) {\n//             console.error('Error fetching today\\'s winner', err);\n//             setTodaysWinner(null);\n//           }\n//         };\n\n//         // Fetch historical winners from API\n//         const fetchHistoricalWinners = async () => {\n//           try {\n//             const response = await axios.get('http://127.0.0.1:8000/api/restaurants/history/historical_winners/', {\n//               headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n//             });\n\n//             console.log('Historical Winners Data:', response.data);\n\n//             setWinners(response.data || []);\n//           } catch (err) {\n//             console.error('Error fetching historical winners', err);\n//             setError('Error fetching historical winners');\n//             setWinners([]);\n//           }\n//         };\n\n//         // Fetch both data\n//         await Promise.all([fetchTodaysWinner(), fetchHistoricalWinners()]);\n//       } catch (err) {\n//         console.error('Error in fetching data', err);\n//         setError('An error occurred while fetching data');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div className=\"error\">{error}</div>;\n//   }\n\n//   return (\n//     <div className=\"winner-display\">\n//       <h1>Winners List</h1>\n\n//       <h2>Today's Winner</h2>\n//       {todaysWinner ? (\n//         <div>\n//           <strong>Date:</strong> {todaysWinner.date} <br />\n//           <strong>Winner:</strong> {todaysWinner.winner_name || 'No name available'} <br />\n//           <strong>Total Votes:</strong> {todaysWinner.total_votes || 'N/A'}\n//         </div>\n//       ) : (\n//         <div>No winner for today yet</div>\n//       )}\n\n//       <h2>Historical Winners</h2>\n//       {winners.length > 0 ? (\n//         <ul>\n//           {winners.map((entry, index) => (\n//             <li key={index}>\n//               <strong>Date:</strong> {entry.date} <br />\n//               <strong>Winner:</strong> {entry.winner_name || 'No name available'} <br />\n//               <strong>Total Votes:</strong> {entry.total_votes || 'N/A'}\n//             </li>\n//           ))}\n//         </ul>\n//       ) : (\n//         <div>No historical winners yet</div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default WinnerDisplay;\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// // import './WinnerDisplay.css'; // Import a CSS file for styling if needed\n\n// const WinnerDisplay = () => {\n//   const [winners, setWinners] = useState([]);\n//   const [todaysWinner, setTodaysWinner] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         // Fetch today's winner from API\n//         const fetchTodaysWinner = async () => {\n//           try {\n//             const response = await axios.get('http://127.0.0.1:8000/api/restaurants/history/todays_winner/', {\n//               headers: { Authorization: Bearer ${localStorage.getItem('access_token')} }\n//             });\n\n//             console.log('Today\\'s Winner Data:', response.data); // Log data here\n\n//             setTodaysWinner(response.data);\n//           } catch (err) {\n//             console.error('Error fetching today\\'s winner', err);\n//             setTodaysWinner(null);\n//           }\n//         };\n\n//         // Fetch historical winners from API\n//         const fetchHistoricalWinners = async () => {\n//           try {\n//             const response = await axios.get('http://127.0.0.1:8000/api/restaurants/history/historical_winners/', {\n//               headers: { Authorization: Bearer ${localStorage.getItem('access_token')} }\n//             });\n\n//             console.log(\"historical_winners\",response.data)\n\n//             setWinners(response.data || []);\n//           } catch (err) {\n//             console.error('Error fetching historical winners', err);\n//             setError('Error fetching historical winners');\n//             setWinners([]);\n//           }\n//         };\n\n//         // Fetch both data\n//         await Promise.all([fetchTodaysWinner(), fetchHistoricalWinners()]);\n//       } catch (err) {\n//         console.error('Error in fetching data', err);\n//         setError('An error occurred while fetching data');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div className=\"error\">{error}</div>;\n//   }\n\n//   return (\n//     <div className=\"winner-display\">\n//       <h1>Winners List</h1>\n\n//       <h2>Today's Winner</h2>\n//       {todaysWinner ? (\n//         <div>\n//           <strong>Date:</strong> {todaysWinner.date} <br />\n//           <strong>Winner:</strong> {todaysWinner.winner_name || 'No name available'} <br />\n//           <strong>Total Votes:</strong> {todaysWinner.total_votes || 'N/A'}\n//         </div>\n//       ) : (\n//         <div>No winner for today yet</div>\n//       )}\n\n//       <h2>Historical Winners</h2>\n//       {winners.length > 0 ? (\n//         <ul>\n//           {winners.map((entry, index) => (\n//             <li key={index}>\n//               <strong>Date:</strong> {entry.date} <br />\n//               <strong>Winner:</strong> {entry.winner_name || 'No name available'} <br />\n//               <strong>Total Votes:</strong> {entry.total_votes || 'N/A'}\n//             </li>\n//           ))}\n//         </ul>\n//       ) : (\n//         <div>No historical winners yet</div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default WinnerDisplay;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n\n// const API_BASE_URL = 'http://127.0.0.1:8000/api/restaurants/history/todays_winner/';\n\n// const WinnerDisplay = () => {\n//   const [todaysWinner, setTodaysWinner] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchTodaysWinner = async () => {\n//       try {\n//         const response = await axios.get(API_BASE_URL, {\n//           headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n//         });\n//         setTodaysWinner(response.data);\n//       } catch (err) {\n//         console.error('Error fetching today\\'s winner', err);\n//         setError('Error fetching today\\'s winner');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchTodaysWinner();\n//   }, []);\n\n//   if (loading) {\n//     return <div className=\"loading\">Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div className=\"error\">{error}</div>;\n//   }\n\n//   return (\n//     <div className=\"todays-winner\">\n//       <h1>Today's Winner</h1>\n//       {todaysWinner ? (\n//         <div className=\"winner-details\">\n//           <strong>Date:</strong> {todaysWinner.date} <br />\n//           <strong>Winner:</strong> {todaysWinner.winner_name || 'No name available'} <br />\n//           <strong>Total Votes:</strong> {todaysWinner.total_votes || 'N/A'}\n//         </div>\n//       ) : (\n//         <div className=\"no-winner\">\n//           No winner for today yet\n//         </div>\n//       )}\n//       <div className=\"link-button\">\n//         <Link to=\"/pastwinnerlist\">View Past Winners</Link>\n//       </div>\n//       <style jsx>{`\n//         .todays-winner {\n//           padding: 20px;\n//           margin: 20px;\n//           border: 1px solid #ddd;\n//           border-radius: 8px;\n//           background-color: #f9f9f9;\n//           max-width: 600px;\n//           margin: auto;\n//           text-align: center;\n//         }\n\n//         .winner-details {\n//           font-size: 18px;\n//           line-height: 1.6;\n//           margin-bottom: 20px;\n//         }\n\n//         .loading {\n//           text-align: center;\n//           font-size: 20px;\n//           color: #007bff;\n//         }\n\n//         .error {\n//           text-align: center;\n//           font-size: 20px;\n//           color: red;\n//         }\n\n//         .no-winner {\n//           font-size: 18px;\n//           color: #555;\n//         }\n\n//         h1 {\n//           color: #333;\n//         }\n\n//         .link-button {\n//           margin-top: 20px;\n//         }\n\n//         .link-button a {\n//           text-decoration: none;\n//           color: #007bff;\n//           background-color: #f1f1f1;\n//           padding: 10px 20px;\n//           border: 1px solid #007bff;\n//           border-radius: 5px;\n//           font-size: 16px;\n//         }\n\n//         .link-button a:hover {\n//           background-color: #e9e9e9;\n//         }\n//       `}</style>\n//     </div>\n//   );\n// };\n\n// export default WinnerDisplay;\n\n// // import React, { useEffect, useState } from 'react';\n// // import axios from 'axios';\n// // import { Link } from 'react-router-dom';\n\n// // const WinnerDisplay = () => {\n// //   const [todaysWinner, setTodaysWinner] = useState(null);\n// //   const [loading, setLoading] = useState(true);\n// //   const [error, setError] = useState('');\n\n// //   useEffect(() => {\n// //     const fetchTodaysWinner = async () => {\n// //       try {\n// //         const response = await axios.get('http://127.0.0.1:8000/api/restaurants/history/todays_winner/', {\n// //           headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n// //         });\n\n// //         setTodaysWinner(response.data);\n// //       } catch (err) {\n// //         console.error('Error fetching today\\'s winner', err);\n// //         setTodaysWinner(null);\n// //         setError('Error fetching today\\'s winner');\n// //       } finally {\n// //         setLoading(false);\n// //       }\n// //     };\n\n// //     fetchTodaysWinner();\n// //   }, []);\n\n// //   if (loading) {\n// //     return <div className=\"loading\">Loading...</div>;\n// //   }\n\n// //   if (error) {\n// //     return <div className=\"error\">{error}</div>;\n// //   }\n\n// //   return (\n// //     <div className=\"todays-winner\">\n// //       <h1>Today's Winner</h1>\n// //       {todaysWinner ? (\n// //         <div className=\"winner-details\">\n// //           <strong>Date:</strong> {todaysWinner.date} <br />\n// //           <strong>Winner:</strong> {todaysWinner.winner_name || 'No name available'} <br />\n// //           <strong>Total Votes:</strong> {todaysWinner.total_votes || 'N/A'}\n// //         </div>\n// //       ) : (\n// //         <div>No winner for today yet</div>\n// //       )}\n// //       <div className=\"link-button\">\n// //         <Link to=\"/pastwinnerlist\">View Past Winners</Link>\n// //       </div>\n// //       <style jsx>{`\n// //         .todays-winner {\n// //           padding: 20px;\n// //           margin: 20px;\n// //           border: 1px solid #ddd;\n// //           border-radius: 8px;\n// //           background-color: #f9f9f9;\n// //           max-width: 600px;\n// //           margin: auto;\n// //           text-align: center;\n// //         }\n\n// //         .winner-details {\n// //           font-size: 18px;\n// //           line-height: 1.6;\n// //         }\n\n// //         .loading {\n// //           text-align: center;\n// //           font-size: 20px;\n// //           color: #007bff;\n// //         }\n\n// //         .error {\n// //           text-align: center;\n// //           font-size: 20px;\n// //           color: red;\n// //         }\n\n// //         h1 {\n// //           color: #333;\n// //         }\n\n// //         .link-button {\n// //           margin-top: 20px;\n// //         }\n\n// //         .link-button a {\n// //           text-decoration: none;\n// //           color: #007bff;\n// //           background-color: #f1f1f1;\n// //           padding: 10px 20px;\n// //           border: 1px solid #007bff;\n// //           border-radius: 5px;\n// //           font-size: 16px;\n// //         }\n\n// //         .link-button a:hover {\n// //           background-color: #e9e9e9;\n// //         }\n// //       `}</style>\n// //     </div>\n// //   );\n// // };\n\n// // export default WinnerDisplay;","map":{"version":3,"names":[],"sources":["/home/ts/Desktop/GSO TASK/lunch-vote-frontend/src/components/WinnerDisplay.js"],"sourcesContent":["\n\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// // import './WinnerDisplay.css'; // Import a CSS file for styling if needed\n\n// const WinnerDisplay = () => {\n//   const [winners, setWinners] = useState([]);\n//   const [todaysWinner, setTodaysWinner] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         // Fetch today's winner from API\n//         const fetchTodaysWinner = async () => {\n//           try {\n//             const response = await axios.get('http://127.0.0.1:8000/api/restaurants/history/todays_winner/', {\n//               headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n//             });\n\n//             console.log('Today\\'s Winner Data:', response.data); // Log data here\n\n//             setTodaysWinner(response.data);\n//           } catch (err) {\n//             console.error('Error fetching today\\'s winner', err);\n//             setTodaysWinner(null);\n//           }\n//         };\n\n//         // Fetch historical winners from API\n//         const fetchHistoricalWinners = async () => {\n//           try {\n//             const response = await axios.get('http://127.0.0.1:8000/api/restaurants/history/historical_winners/', {\n//               headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n//             });\n\n//             console.log('Historical Winners Data:', response.data);\n            \n//             setWinners(response.data || []);\n//           } catch (err) {\n//             console.error('Error fetching historical winners', err);\n//             setError('Error fetching historical winners');\n//             setWinners([]);\n//           }\n//         };\n\n//         // Fetch both data\n//         await Promise.all([fetchTodaysWinner(), fetchHistoricalWinners()]);\n//       } catch (err) {\n//         console.error('Error in fetching data', err);\n//         setError('An error occurred while fetching data');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div className=\"error\">{error}</div>;\n//   }\n\n//   return (\n//     <div className=\"winner-display\">\n//       <h1>Winners List</h1>\n\n//       <h2>Today's Winner</h2>\n//       {todaysWinner ? (\n//         <div>\n//           <strong>Date:</strong> {todaysWinner.date} <br />\n//           <strong>Winner:</strong> {todaysWinner.winner_name || 'No name available'} <br />\n//           <strong>Total Votes:</strong> {todaysWinner.total_votes || 'N/A'}\n//         </div>\n//       ) : (\n//         <div>No winner for today yet</div>\n//       )}\n\n//       <h2>Historical Winners</h2>\n//       {winners.length > 0 ? (\n//         <ul>\n//           {winners.map((entry, index) => (\n//             <li key={index}>\n//               <strong>Date:</strong> {entry.date} <br />\n//               <strong>Winner:</strong> {entry.winner_name || 'No name available'} <br />\n//               <strong>Total Votes:</strong> {entry.total_votes || 'N/A'}\n//             </li>\n//           ))}\n//         </ul>\n//       ) : (\n//         <div>No historical winners yet</div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default WinnerDisplay;\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// // import './WinnerDisplay.css'; // Import a CSS file for styling if needed\n\n// const WinnerDisplay = () => {\n//   const [winners, setWinners] = useState([]);\n//   const [todaysWinner, setTodaysWinner] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         // Fetch today's winner from API\n//         const fetchTodaysWinner = async () => {\n//           try {\n//             const response = await axios.get('http://127.0.0.1:8000/api/restaurants/history/todays_winner/', {\n//               headers: { Authorization: Bearer ${localStorage.getItem('access_token')} }\n//             });\n\n//             console.log('Today\\'s Winner Data:', response.data); // Log data here\n\n//             setTodaysWinner(response.data);\n//           } catch (err) {\n//             console.error('Error fetching today\\'s winner', err);\n//             setTodaysWinner(null);\n//           }\n//         };\n\n//         // Fetch historical winners from API\n//         const fetchHistoricalWinners = async () => {\n//           try {\n//             const response = await axios.get('http://127.0.0.1:8000/api/restaurants/history/historical_winners/', {\n//               headers: { Authorization: Bearer ${localStorage.getItem('access_token')} }\n//             });\n\n//             console.log(\"historical_winners\",response.data)\n            \n//             setWinners(response.data || []);\n//           } catch (err) {\n//             console.error('Error fetching historical winners', err);\n//             setError('Error fetching historical winners');\n//             setWinners([]);\n//           }\n//         };\n\n//         // Fetch both data\n//         await Promise.all([fetchTodaysWinner(), fetchHistoricalWinners()]);\n//       } catch (err) {\n//         console.error('Error in fetching data', err);\n//         setError('An error occurred while fetching data');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div className=\"error\">{error}</div>;\n//   }\n\n//   return (\n//     <div className=\"winner-display\">\n//       <h1>Winners List</h1>\n\n//       <h2>Today's Winner</h2>\n//       {todaysWinner ? (\n//         <div>\n//           <strong>Date:</strong> {todaysWinner.date} <br />\n//           <strong>Winner:</strong> {todaysWinner.winner_name || 'No name available'} <br />\n//           <strong>Total Votes:</strong> {todaysWinner.total_votes || 'N/A'}\n//         </div>\n//       ) : (\n//         <div>No winner for today yet</div>\n//       )}\n\n//       <h2>Historical Winners</h2>\n//       {winners.length > 0 ? (\n//         <ul>\n//           {winners.map((entry, index) => (\n//             <li key={index}>\n//               <strong>Date:</strong> {entry.date} <br />\n//               <strong>Winner:</strong> {entry.winner_name || 'No name available'} <br />\n//               <strong>Total Votes:</strong> {entry.total_votes || 'N/A'}\n//             </li>\n//           ))}\n//         </ul>\n//       ) : (\n//         <div>No historical winners yet</div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default WinnerDisplay;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n\n// const API_BASE_URL = 'http://127.0.0.1:8000/api/restaurants/history/todays_winner/';\n\n// const WinnerDisplay = () => {\n//   const [todaysWinner, setTodaysWinner] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchTodaysWinner = async () => {\n//       try {\n//         const response = await axios.get(API_BASE_URL, {\n//           headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n//         });\n//         setTodaysWinner(response.data);\n//       } catch (err) {\n//         console.error('Error fetching today\\'s winner', err);\n//         setError('Error fetching today\\'s winner');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchTodaysWinner();\n//   }, []);\n\n//   if (loading) {\n//     return <div className=\"loading\">Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div className=\"error\">{error}</div>;\n//   }\n\n//   return (\n//     <div className=\"todays-winner\">\n//       <h1>Today's Winner</h1>\n//       {todaysWinner ? (\n//         <div className=\"winner-details\">\n//           <strong>Date:</strong> {todaysWinner.date} <br />\n//           <strong>Winner:</strong> {todaysWinner.winner_name || 'No name available'} <br />\n//           <strong>Total Votes:</strong> {todaysWinner.total_votes || 'N/A'}\n//         </div>\n//       ) : (\n//         <div className=\"no-winner\">\n//           No winner for today yet\n//         </div>\n//       )}\n//       <div className=\"link-button\">\n//         <Link to=\"/pastwinnerlist\">View Past Winners</Link>\n//       </div>\n//       <style jsx>{`\n//         .todays-winner {\n//           padding: 20px;\n//           margin: 20px;\n//           border: 1px solid #ddd;\n//           border-radius: 8px;\n//           background-color: #f9f9f9;\n//           max-width: 600px;\n//           margin: auto;\n//           text-align: center;\n//         }\n\n//         .winner-details {\n//           font-size: 18px;\n//           line-height: 1.6;\n//           margin-bottom: 20px;\n//         }\n\n//         .loading {\n//           text-align: center;\n//           font-size: 20px;\n//           color: #007bff;\n//         }\n\n//         .error {\n//           text-align: center;\n//           font-size: 20px;\n//           color: red;\n//         }\n\n//         .no-winner {\n//           font-size: 18px;\n//           color: #555;\n//         }\n\n//         h1 {\n//           color: #333;\n//         }\n\n//         .link-button {\n//           margin-top: 20px;\n//         }\n\n//         .link-button a {\n//           text-decoration: none;\n//           color: #007bff;\n//           background-color: #f1f1f1;\n//           padding: 10px 20px;\n//           border: 1px solid #007bff;\n//           border-radius: 5px;\n//           font-size: 16px;\n//         }\n\n//         .link-button a:hover {\n//           background-color: #e9e9e9;\n//         }\n//       `}</style>\n//     </div>\n//   );\n// };\n\n// export default WinnerDisplay;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // import React, { useEffect, useState } from 'react';\n// // import axios from 'axios';\n// // import { Link } from 'react-router-dom';\n\n// // const WinnerDisplay = () => {\n// //   const [todaysWinner, setTodaysWinner] = useState(null);\n// //   const [loading, setLoading] = useState(true);\n// //   const [error, setError] = useState('');\n\n// //   useEffect(() => {\n// //     const fetchTodaysWinner = async () => {\n// //       try {\n// //         const response = await axios.get('http://127.0.0.1:8000/api/restaurants/history/todays_winner/', {\n// //           headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n// //         });\n\n// //         setTodaysWinner(response.data);\n// //       } catch (err) {\n// //         console.error('Error fetching today\\'s winner', err);\n// //         setTodaysWinner(null);\n// //         setError('Error fetching today\\'s winner');\n// //       } finally {\n// //         setLoading(false);\n// //       }\n// //     };\n\n// //     fetchTodaysWinner();\n// //   }, []);\n\n// //   if (loading) {\n// //     return <div className=\"loading\">Loading...</div>;\n// //   }\n\n// //   if (error) {\n// //     return <div className=\"error\">{error}</div>;\n// //   }\n\n// //   return (\n// //     <div className=\"todays-winner\">\n// //       <h1>Today's Winner</h1>\n// //       {todaysWinner ? (\n// //         <div className=\"winner-details\">\n// //           <strong>Date:</strong> {todaysWinner.date} <br />\n// //           <strong>Winner:</strong> {todaysWinner.winner_name || 'No name available'} <br />\n// //           <strong>Total Votes:</strong> {todaysWinner.total_votes || 'N/A'}\n// //         </div>\n// //       ) : (\n// //         <div>No winner for today yet</div>\n// //       )}\n// //       <div className=\"link-button\">\n// //         <Link to=\"/pastwinnerlist\">View Past Winners</Link>\n// //       </div>\n// //       <style jsx>{`\n// //         .todays-winner {\n// //           padding: 20px;\n// //           margin: 20px;\n// //           border: 1px solid #ddd;\n// //           border-radius: 8px;\n// //           background-color: #f9f9f9;\n// //           max-width: 600px;\n// //           margin: auto;\n// //           text-align: center;\n// //         }\n\n// //         .winner-details {\n// //           font-size: 18px;\n// //           line-height: 1.6;\n// //         }\n\n// //         .loading {\n// //           text-align: center;\n// //           font-size: 20px;\n// //           color: #007bff;\n// //         }\n\n// //         .error {\n// //           text-align: center;\n// //           font-size: 20px;\n// //           color: red;\n// //         }\n\n// //         h1 {\n// //           color: #333;\n// //         }\n\n// //         .link-button {\n// //           margin-top: 20px;\n// //         }\n\n// //         .link-button a {\n// //           text-decoration: none;\n// //           color: #007bff;\n// //           background-color: #f1f1f1;\n// //           padding: 10px 20px;\n// //           border: 1px solid #007bff;\n// //           border-radius: 5px;\n// //           font-size: 16px;\n// //         }\n\n// //         .link-button a:hover {\n// //           background-color: #e9e9e9;\n// //         }\n// //       `}</style>\n// //     </div>\n// //   );\n// // };\n\n// // export default WinnerDisplay;\n"],"mappings":";;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAqoBA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}