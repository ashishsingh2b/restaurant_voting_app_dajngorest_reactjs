{"ast":null,"code":"var _jsxFileName = \"/home/ts/Desktop/Fullstack Practice/GSO TASK/lunch-vote-frontend/src/components/RestaurantList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './RestaurantList.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://127.0.0.1:8000/api/';\nconst RestaurantList = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [votesLeft, setVotesLeft] = useState(0);\n  const [newRestaurantName, setNewRestaurantName] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentVote, setCurrentVote] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check authentication status and token\n    const checkAuth = () => {\n      const token = localStorage.getItem('access_token');\n      setIsAuthenticated(!!token);\n    };\n    checkAuth();\n  }, []);\n  useEffect(() => {\n    // Fetch restaurant data\n    const fetchRestaurants = async () => {\n      if (!isAuthenticated) return;\n      try {\n        const response = await axios.get(`${API_BASE_URL}restaurants/`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('access_token')}`\n          }\n        });\n        const {\n          restaurants,\n          votesLeft: newVotesLeft\n        } = response.data;\n        setRestaurants(restaurants || []);\n        setVotesLeft(newVotesLeft || 3);\n      } catch (error) {\n        console.error('Error fetching restaurants:', error);\n        setError('Error fetching restaurants');\n        setRestaurants([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRestaurants();\n  }, [isAuthenticated]);\n\n  // Handle vote\n  const handleVote = async restaurantId => {\n    if (!isAuthenticated) {\n      navigate('/login', {\n        state: {\n          from: '/restaurants'\n        }\n      });\n      return;\n    }\n    if (votesLeft <= 0) {\n      alert('No votes left for today!');\n      return;\n    }\n\n    // Determine the next vote value\n    const voteOrder = ['first', 'second', 'third'];\n    const currentVoteValue = currentVote[restaurantId] || 'first';\n    const currentIndex = voteOrder.indexOf(currentVoteValue);\n    const nextIndex = (currentIndex + 1) % voteOrder.length;\n    const nextVoteValue = voteOrder[nextIndex];\n    try {\n      const response = await axios.post(`${API_BASE_URL}restaurants/vote/`, {\n        restaurantId,\n        voteType: nextVoteValue\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      const {\n        restaurants,\n        votesLeft: newVotesLeft\n      } = response.data;\n      setRestaurants(restaurants || []);\n      setVotesLeft(newVotesLeft || votesLeft);\n      setCurrentVote(prevVotes => ({\n        ...prevVotes,\n        [restaurantId]: nextVoteValue\n      }));\n      let votePoints;\n      switch (nextVoteValue) {\n        case 'first':\n          votePoints = '1 point';\n          break;\n        case 'second':\n          votePoints = '0.5 points';\n          break;\n        case 'third':\n          votePoints = '0.25 points';\n          break;\n        default:\n          votePoints = 'unknown';\n      }\n      alert(`You have cast a vote of ${votePoints}`);\n    } catch (error) {\n      handleApiError(error);\n    }\n  };\n\n  // Add restaurant\n  const handleAddRestaurant = async () => {\n    if (!isAuthenticated) {\n      navigate('/login', {\n        state: {\n          from: '/restaurants'\n        }\n      });\n      return;\n    }\n    if (!newRestaurantName.trim()) {\n      alert('Please enter a valid restaurant name.');\n      return;\n    }\n    try {\n      const response = await axios.post(`${API_BASE_URL}restaurants/add_restaurant/`, {\n        name: newRestaurantName.trim()\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      setRestaurants(prevRestaurants => [...prevRestaurants, response.data]);\n      setNewRestaurantName('');\n    } catch (error) {\n      console.error('Error adding restaurant:', error);\n      alert('An error occurred while adding the restaurant.');\n    }\n  };\n\n  // Delete restaurant\n  const handleDeleteRestaurant = async restaurantId => {\n    if (!isAuthenticated) {\n      navigate('/login', {\n        state: {\n          from: `/restaurants`\n        }\n      });\n      return;\n    }\n    try {\n      const response = await axios.delete(`${API_BASE_URL}restaurants/${restaurantId}/delete-restaurant/`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      if (response.status === 204) {\n        setRestaurants(prevRestaurants => prevRestaurants.filter(restaurant => restaurant.id !== restaurantId));\n      } else {\n        console.error('Unexpected response status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error deleting restaurant:', error);\n      alert('You are not authorized to delete this restaurant.');\n    }\n  };\n\n  // Handle API error\n  const handleApiError = error => {\n    var _error$response, _error$response2;\n    console.error('API Error:', error);\n    const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403 ? 'Daily vote limit reached. Youâ€™ve already voted 3 times today.' : ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 400 ? 'An error occurred while processing your vote.' : 'An error occurred while voting.';\n    alert(errorMessage);\n  };\n\n  // Get button text based on the current vote\n  const getButtonText = restaurantId => {\n    const voteType = currentVote[restaurantId];\n    switch (voteType) {\n      case 'first':\n        return 'Vote (1)';\n      // next options\n      case 'second':\n        return 'Vote (0.25)';\n      // next option\n      case 'third':\n        return 'Vote (.25)';\n      // reset to initial vote\n      default:\n        return 'Vote (1)';\n      // initial option\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Restaurants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total number of restaurants: \", restaurants.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Votes left for today: \", votesLeft]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading, please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"alert\",\n      children: [\"An error occurred: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newRestaurantName,\n        onChange: e => setNewRestaurantName(e.target.value),\n        placeholder: \"Restaurant Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddRestaurant,\n        children: \"Add Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in to add a restaurant or vote.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: restaurants.length > 0 ? restaurants.map((restaurant, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [index + 1, \". \", restaurant.name, \" - \", restaurant.user.username, \" - Votes: \", restaurant.total_votes || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVote(restaurant.id),\n            children: getButtonText(restaurant.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/edit-restaurant/${restaurant.id}/`,\n            className: \"LinkButton\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteRestaurant(restaurant.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Login to vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }, this)]\n      }, restaurant.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No restaurants available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantList, \"3+arrYxh5efTaQOzd/MxHdrFplo=\", false, function () {\n  return [useNavigate];\n});\n_c = RestaurantList;\nexport default RestaurantList;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link, useNavigate } from 'react-router-dom';\n// import './RestaurantList.css'; // Import the CSS file\n\n// const API_BASE_URL = 'http://127.0.0.1:8000/api/';\n\n// const RestaurantList = () => {\n//   const [restaurants, setRestaurants] = useState([]);\n//   const [votesLeft, setVotesLeft] = useState(0);\n//   const [newRestaurantName, setNewRestaurantName] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [currentVote, setCurrentVote] = useState({});\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Check authentication status and token\n//     const checkAuth = () => {\n//       const token = localStorage.getItem('access_token');\n//       setIsAuthenticated(!!token);\n//     };\n\n//     checkAuth();\n//   }, []);\n\n//   useEffect(() => {\n//     // Fetch restaurant data\n//     const fetchRestaurants = async () => {\n//       if (!isAuthenticated) return;\n\n//       try {\n//         const response = await axios.get(`${API_BASE_URL}restaurants/`, { \n//           headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } \n//         });\n\n//         const { restaurants, votesLeft: newVotesLeft } = response.data;\n\n//         setRestaurants(restaurants || []);\n//         setVotesLeft(newVotesLeft || 3);\n//       } catch (error) {\n//         console.error('Error fetching restaurants:', error);\n//         setError('Error fetching restaurants');\n//         setRestaurants([]);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchRestaurants();\n//   }, [isAuthenticated]);\n\n//   // RestaurantList.js\n//   const handleVote = async (restaurantId) => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: '/restaurants' } });\n//       return;\n//     }\n\n//     if (votesLeft <= 0) {\n//       alert('No votes left for today!');\n//       return;\n//     }\n\n//     const currentVoteValue = currentVote[restaurantId] || 'first';\n//     const voteOrder = ['first', 'second', 'third'];\n//     const nextVoteIndex = (voteOrder.indexOf(currentVoteValue) % 3) + 1;\n//     console.log(\"Calculation\",(voteOrder.indexOf(currentVoteValue) % 3) + 1)\n//     const nextVoteValue = voteOrder[nextVoteIndex];\n//     try {\n//       const response = await axios.post(`${API_BASE_URL}restaurants/vote/`,\n//         { restaurantId, voteType: currentVoteValue },\n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n\n//       const { restaurants, votesLeft: newVotesLeft } = response.data;\n\n//       setRestaurants(restaurants || []);\n//       setVotesLeft(newVotesLeft || votesLeft);\n//       setCurrentVote(prevVotes => ({ ...prevVotes, [restaurantId]: nextVoteValue }));\n\n//       // Determine vote points\n//       let votePoints = \"1 point\";\n//       console.log(\"CurrentVote\",currentVote[restaurantId])\n//       switch (currentVoteValue) {\n//         case 'first':\n//           votePoints = '1 point';\n//           break;\n//         case 'second':\n//           votePoints = '0.5 points';\n//           break;\n//         case 'third':\n//           votePoints = '0.25 points';\n//           break;\n//         default:\n//           votePoints = 'unknown';\n//       }\n\n//       // Adjust alert message based on current vote\n\n//       if (currentVoteValue === 'first') {\n//         alert(`You have cast a vote of ${votePoints}`);\n//       } else {\n//         alert(`You have updated your vote to ${votePoints}.`);\n//       }\n\n//     } catch (error) {\n//       handleApiError(error);\n//     }\n//   };\n\n//   const handleAddRestaurant = async () => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: '/restaurants' } });\n//       return;\n//     }\n\n//     if (!newRestaurantName.trim()) {\n//       alert('Please enter a valid restaurant name.');\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(`${API_BASE_URL}restaurants/add_restaurant/`, \n//         { name: newRestaurantName.trim() }, \n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n//       setRestaurants(prevRestaurants => [...prevRestaurants, response.data]);\n//       setNewRestaurantName('');\n//     } catch (error) {\n//       console.error('Error adding restaurant:', error);\n//       alert('An error occurred while adding the restaurant.');\n//     }\n//   };\n\n// const handleDeleteRestaurant = async (restaurantId) => {\n//   if (!isAuthenticated) {\n//     navigate('/login', { state: { from: `/restaurants` } });\n//     return;\n//   }\n\n//   try {\n//     const response = await axios.delete(`${API_BASE_URL}restaurants/${restaurantId}/delete-restaurant/`, {\n//       headers: {\n//         Authorization: `Bearer ${localStorage.getItem('access_token')}`\n//       }\n//     });\n//     if (response.status === 204) {\n//       setRestaurants(prevRestaurants => prevRestaurants.filter(restaurant => restaurant.id !== restaurantId));\n//     } else {\n//       console.error('Unexpected response status:', response.status);\n//     }\n//   } catch (error) {\n//     console.error('Error deleting restaurant:', error);\n//     alert('You are not authorized to delete this restaurant.');\n//   }\n// };\n\n//   const handleApiError = (error) => {\n//     console.error('API Error:', error);\n//     const errorMessage = error.response?.status === 403\n//       ? '\"Daily vote limit reached. Youâ€™ve already voted 3 times today.\"'\n//       : error.response?.status === 400\n//       ? 'An error occurred while processing your vote.'\n//       : 'An error occurred while voting.';\n//     alert(errorMessage);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Restaurants</h1>\n//       <p>Total number of restaurants: {restaurants.length}</p>\n//       <p>Vote left For Today {votesLeft}</p>\n//       {loading && <p className=\"loading\">Loading, please wait...</p>}\n//       {error && <p className=\"alert\">An error occurred: {error}</p>}\n\n//       {isAuthenticated ? (\n//         <div className=\"input-container\">\n//           <h2>Add New Restaurant</h2>\n//           <input \n//             type=\"text\" \n//             value={newRestaurantName} \n//             onChange={(e) => setNewRestaurantName(e.target.value)} \n//             placeholder=\"Restaurant Name\" \n//           />\n//           <button onClick={handleAddRestaurant}>Add Restaurant</button>\n//         </div>\n//       ) : (\n//         <p>Please log in to add a restaurant or vote.</p>\n//       )}\n//       <ul>\n//         {restaurants.length > 0 ? (\n//           restaurants.map((restaurant, index) => (\n//             <li key={restaurant.id}>\n//               <p>{index + 1}. {restaurant.name} - {restaurant.user.username} - Votes: {restaurant.total_votes || 0}</p>\n//               {isAuthenticated ? (\n//                 <div>\n//                   <button onClick={() => handleVote(restaurant.id)}>\n//                     Vote {currentVote[restaurant.id] === 'second' ? '0.5' : currentVote[restaurant.id] === 'third' ? '0.25' :  '1'}\n//                     {console.log(\"Current vote\",currentVote[restaurant.id])}\n//                   </button>\n//                   <Link to={`/edit-restaurant/${restaurant.id}/`} className=\"LinkButton\">Edit</Link>\n//                   <button onClick={() => handleDeleteRestaurant(restaurant.id)}>Delete</button>\n//                 </div>\n//               ) : (\n//                 <p>Login to vote</p>\n//               )}\n//             </li>\n//           ))\n//         ) : (\n//           <p>No restaurants available</p>\n//         )}\n//       </ul>\n//     </div>\n//   );\n// };\n// export default RestaurantList;\nvar _c;\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","useNavigate","jsxDEV","_jsxDEV","API_BASE_URL","RestaurantList","_s","restaurants","setRestaurants","votesLeft","setVotesLeft","newRestaurantName","setNewRestaurantName","error","setError","loading","setLoading","isAuthenticated","setIsAuthenticated","currentVote","setCurrentVote","navigate","checkAuth","token","localStorage","getItem","fetchRestaurants","response","get","headers","Authorization","newVotesLeft","data","console","handleVote","restaurantId","state","from","alert","voteOrder","currentVoteValue","currentIndex","indexOf","nextIndex","length","nextVoteValue","post","voteType","prevVotes","votePoints","handleApiError","handleAddRestaurant","trim","name","prevRestaurants","handleDeleteRestaurant","delete","status","filter","restaurant","id","_error$response","_error$response2","errorMessage","getButtonText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","index","user","username","total_votes","to","_c","$RefreshReg$"],"sources":["/home/ts/Desktop/Fullstack Practice/GSO TASK/lunch-vote-frontend/src/components/RestaurantList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './RestaurantList.css'; // Import the CSS file\n\nconst API_BASE_URL = 'http://127.0.0.1:8000/api/';\n\nconst RestaurantList = () => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [votesLeft, setVotesLeft] = useState(0);\n  const [newRestaurantName, setNewRestaurantName] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentVote, setCurrentVote] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Check authentication status and token\n    const checkAuth = () => {\n      const token = localStorage.getItem('access_token');\n      setIsAuthenticated(!!token);\n    };\n\n    checkAuth();\n  }, []);\n\n  useEffect(() => {\n    // Fetch restaurant data\n    const fetchRestaurants = async () => {\n      if (!isAuthenticated) return;\n\n      try {\n        const response = await axios.get(`${API_BASE_URL}restaurants/`, { \n          headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } \n        });\n\n        const { restaurants, votesLeft: newVotesLeft } = response.data;\n\n        setRestaurants(restaurants || []);\n        setVotesLeft(newVotesLeft || 3);\n      } catch (error) {\n        console.error('Error fetching restaurants:', error);\n        setError('Error fetching restaurants');\n        setRestaurants([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRestaurants();\n  }, [isAuthenticated]);\n\n  // Handle vote\n  const handleVote = async (restaurantId) => {\n    if (!isAuthenticated) {\n      navigate('/login', { state: { from: '/restaurants' } });\n      return;\n    }\n  \n    if (votesLeft <= 0) {\n      alert('No votes left for today!');\n      return;\n    }\n\n    // Determine the next vote value\n    const voteOrder = ['first', 'second', 'third'];\n    const currentVoteValue = currentVote[restaurantId] || 'first';\n    const currentIndex = voteOrder.indexOf(currentVoteValue);\n    const nextIndex = (currentIndex + 1) % voteOrder.length;\n    const nextVoteValue = voteOrder[nextIndex];\n  \n    try {\n      const response = await axios.post(`${API_BASE_URL}restaurants/vote/`,\n        { restaurantId, voteType: nextVoteValue },\n        { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n      );\n\n      const { restaurants, votesLeft: newVotesLeft } = response.data;\n  \n      setRestaurants(restaurants || []);\n      setVotesLeft(newVotesLeft || votesLeft);\n      setCurrentVote(prevVotes => ({ ...prevVotes, [restaurantId]: nextVoteValue }));\n  \n      let votePoints;\n      switch (nextVoteValue) {\n        case 'first':\n          votePoints = '1 point';\n          break;\n        case 'second':\n          votePoints = '0.5 points';\n          break;\n        case 'third':\n          votePoints = '0.25 points';\n          break;\n        default:\n          votePoints = 'unknown';\n      }\n  \n      alert(`You have cast a vote of ${votePoints}`);\n  \n    } catch (error) {\n      handleApiError(error);\n    }\n  };\n\n  // Add restaurant\n  const handleAddRestaurant = async () => {\n    if (!isAuthenticated) {\n      navigate('/login', { state: { from: '/restaurants' } });\n      return;\n    }\n\n    if (!newRestaurantName.trim()) {\n      alert('Please enter a valid restaurant name.');\n      return;\n    }\n\n    try {\n      const response = await axios.post(`${API_BASE_URL}restaurants/add_restaurant/`, \n        { name: newRestaurantName.trim() }, \n        { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n      );\n      setRestaurants(prevRestaurants => [...prevRestaurants, response.data]);\n      setNewRestaurantName('');\n    } catch (error) {\n      console.error('Error adding restaurant:', error);\n      alert('An error occurred while adding the restaurant.');\n    }\n  };\n\n  // Delete restaurant\n  const handleDeleteRestaurant = async (restaurantId) => {\n    if (!isAuthenticated) {\n      navigate('/login', { state: { from: `/restaurants` } });\n      return;\n    }\n\n    try {\n      const response = await axios.delete(`${API_BASE_URL}restaurants/${restaurantId}/delete-restaurant/`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      if (response.status === 204) {\n        setRestaurants(prevRestaurants => prevRestaurants.filter(restaurant => restaurant.id !== restaurantId));\n      } else {\n        console.error('Unexpected response status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error deleting restaurant:', error);\n      alert('You are not authorized to delete this restaurant.');\n    }\n  };\n\n  // Handle API error\n  const handleApiError = (error) => {\n    console.error('API Error:', error);\n    const errorMessage = error.response?.status === 403\n      ? 'Daily vote limit reached. Youâ€™ve already voted 3 times today.'\n      : error.response?.status === 400\n      ? 'An error occurred while processing your vote.'\n      : 'An error occurred while voting.';\n    alert(errorMessage);\n  };\n\n  // Get button text based on the current vote\n  const getButtonText = (restaurantId) => {\n    const voteType = currentVote[restaurantId];\n    switch (voteType) {\n      case 'first':\n        return 'Vote (1)'; // next options\n      case 'second':\n        return 'Vote (0.25)'; // next option\n      case 'third':\n        return 'Vote (.25)'; // reset to initial vote\n      default:\n        return 'Vote (1)'; // initial option\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Restaurants</h1>\n      <p>Total number of restaurants: {restaurants.length}</p>\n      <p>Votes left for today: {votesLeft}</p>\n      {loading && <p className=\"loading\">Loading, please wait...</p>}\n      {error && <p className=\"alert\">An error occurred: {error}</p>}\n\n      {isAuthenticated ? (\n        <div className=\"input-container\">\n          <h2>Add New Restaurant</h2>\n          <input \n            type=\"text\" \n            value={newRestaurantName} \n            onChange={(e) => setNewRestaurantName(e.target.value)} \n            placeholder=\"Restaurant Name\" \n          />\n          <button onClick={handleAddRestaurant}>Add Restaurant</button>\n        </div>\n      ) : (\n        <p>Please log in to add a restaurant or vote.</p>\n      )}\n      <ul>\n        {restaurants.length > 0 ? (\n          restaurants.map((restaurant, index) => (\n            <li key={restaurant.id}>\n              <p>{index + 1}. {restaurant.name} - {restaurant.user.username} - Votes: {restaurant.total_votes || 0}</p>\n              {isAuthenticated ? (\n                <div>\n                  <button \n                    onClick={() => handleVote(restaurant.id)}\n                  >\n                    {getButtonText(restaurant.id)}\n                  </button>\n                  <Link to={`/edit-restaurant/${restaurant.id}/`} className=\"LinkButton\">Edit</Link>\n                  <button onClick={() => handleDeleteRestaurant(restaurant.id)}>Delete</button>\n                </div>\n              ) : (\n                <p>Login to vote</p>\n              )}\n            </li>\n          ))\n        ) : (\n          <p>No restaurants available</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default RestaurantList;\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link, useNavigate } from 'react-router-dom';\n// import './RestaurantList.css'; // Import the CSS file\n\n// const API_BASE_URL = 'http://127.0.0.1:8000/api/';\n\n// const RestaurantList = () => {\n//   const [restaurants, setRestaurants] = useState([]);\n//   const [votesLeft, setVotesLeft] = useState(0);\n//   const [newRestaurantName, setNewRestaurantName] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [currentVote, setCurrentVote] = useState({});\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Check authentication status and token\n//     const checkAuth = () => {\n//       const token = localStorage.getItem('access_token');\n//       setIsAuthenticated(!!token);\n//     };\n\n//     checkAuth();\n//   }, []);\n\n//   useEffect(() => {\n//     // Fetch restaurant data\n//     const fetchRestaurants = async () => {\n//       if (!isAuthenticated) return;\n\n//       try {\n//         const response = await axios.get(`${API_BASE_URL}restaurants/`, { \n//           headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } \n//         });\n\n//         const { restaurants, votesLeft: newVotesLeft } = response.data;\n\n//         setRestaurants(restaurants || []);\n//         setVotesLeft(newVotesLeft || 3);\n//       } catch (error) {\n//         console.error('Error fetching restaurants:', error);\n//         setError('Error fetching restaurants');\n//         setRestaurants([]);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchRestaurants();\n//   }, [isAuthenticated]);\n\n//   // RestaurantList.js\n//   const handleVote = async (restaurantId) => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: '/restaurants' } });\n//       return;\n//     }\n  \n//     if (votesLeft <= 0) {\n//       alert('No votes left for today!');\n//       return;\n//     }\n  \n//     const currentVoteValue = currentVote[restaurantId] || 'first';\n//     const voteOrder = ['first', 'second', 'third'];\n//     const nextVoteIndex = (voteOrder.indexOf(currentVoteValue) % 3) + 1;\n//     console.log(\"Calculation\",(voteOrder.indexOf(currentVoteValue) % 3) + 1)\n//     const nextVoteValue = voteOrder[nextVoteIndex];\n//     try {\n//       const response = await axios.post(`${API_BASE_URL}restaurants/vote/`,\n//         { restaurantId, voteType: currentVoteValue },\n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n  \n//       const { restaurants, votesLeft: newVotesLeft } = response.data;\n  \n//       setRestaurants(restaurants || []);\n//       setVotesLeft(newVotesLeft || votesLeft);\n//       setCurrentVote(prevVotes => ({ ...prevVotes, [restaurantId]: nextVoteValue }));\n  \n//       // Determine vote points\n//       let votePoints = \"1 point\";\n//       console.log(\"CurrentVote\",currentVote[restaurantId])\n//       switch (currentVoteValue) {\n//         case 'first':\n//           votePoints = '1 point';\n//           break;\n//         case 'second':\n//           votePoints = '0.5 points';\n//           break;\n//         case 'third':\n//           votePoints = '0.25 points';\n//           break;\n//         default:\n//           votePoints = 'unknown';\n//       }\n  \n//       // Adjust alert message based on current vote\n\n//       if (currentVoteValue === 'first') {\n//         alert(`You have cast a vote of ${votePoints}`);\n//       } else {\n//         alert(`You have updated your vote to ${votePoints}.`);\n//       }\n  \n//     } catch (error) {\n//       handleApiError(error);\n//     }\n//   };\n  \n\n  \n//   const handleAddRestaurant = async () => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: '/restaurants' } });\n//       return;\n//     }\n\n//     if (!newRestaurantName.trim()) {\n//       alert('Please enter a valid restaurant name.');\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(`${API_BASE_URL}restaurants/add_restaurant/`, \n//         { name: newRestaurantName.trim() }, \n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n//       setRestaurants(prevRestaurants => [...prevRestaurants, response.data]);\n//       setNewRestaurantName('');\n//     } catch (error) {\n//       console.error('Error adding restaurant:', error);\n//       alert('An error occurred while adding the restaurant.');\n//     }\n//   };\n\n// const handleDeleteRestaurant = async (restaurantId) => {\n//   if (!isAuthenticated) {\n//     navigate('/login', { state: { from: `/restaurants` } });\n//     return;\n//   }\n\n//   try {\n//     const response = await axios.delete(`${API_BASE_URL}restaurants/${restaurantId}/delete-restaurant/`, {\n//       headers: {\n//         Authorization: `Bearer ${localStorage.getItem('access_token')}`\n//       }\n//     });\n//     if (response.status === 204) {\n//       setRestaurants(prevRestaurants => prevRestaurants.filter(restaurant => restaurant.id !== restaurantId));\n//     } else {\n//       console.error('Unexpected response status:', response.status);\n//     }\n//   } catch (error) {\n//     console.error('Error deleting restaurant:', error);\n//     alert('You are not authorized to delete this restaurant.');\n//   }\n// };\n\n//   const handleApiError = (error) => {\n//     console.error('API Error:', error);\n//     const errorMessage = error.response?.status === 403\n//       ? '\"Daily vote limit reached. Youâ€™ve already voted 3 times today.\"'\n//       : error.response?.status === 400\n//       ? 'An error occurred while processing your vote.'\n//       : 'An error occurred while voting.';\n//     alert(errorMessage);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Restaurants</h1>\n//       <p>Total number of restaurants: {restaurants.length}</p>\n//       <p>Vote left For Today {votesLeft}</p>\n//       {loading && <p className=\"loading\">Loading, please wait...</p>}\n//       {error && <p className=\"alert\">An error occurred: {error}</p>}\n\n//       {isAuthenticated ? (\n//         <div className=\"input-container\">\n//           <h2>Add New Restaurant</h2>\n//           <input \n//             type=\"text\" \n//             value={newRestaurantName} \n//             onChange={(e) => setNewRestaurantName(e.target.value)} \n//             placeholder=\"Restaurant Name\" \n//           />\n//           <button onClick={handleAddRestaurant}>Add Restaurant</button>\n//         </div>\n//       ) : (\n//         <p>Please log in to add a restaurant or vote.</p>\n//       )}\n//       <ul>\n//         {restaurants.length > 0 ? (\n//           restaurants.map((restaurant, index) => (\n//             <li key={restaurant.id}>\n//               <p>{index + 1}. {restaurant.name} - {restaurant.user.username} - Votes: {restaurant.total_votes || 0}</p>\n//               {isAuthenticated ? (\n//                 <div>\n//                   <button onClick={() => handleVote(restaurant.id)}>\n//                     Vote {currentVote[restaurant.id] === 'second' ? '0.5' : currentVote[restaurant.id] === 'third' ? '0.25' :  '1'}\n//                     {console.log(\"Current vote\",currentVote[restaurant.id])}\n//                   </button>\n//                   <Link to={`/edit-restaurant/${restaurant.id}/`} className=\"LinkButton\">Edit</Link>\n//                   <button onClick={() => handleDeleteRestaurant(restaurant.id)}>Delete</button>\n//                 </div>\n//               ) : (\n//                 <p>Login to vote</p>\n//               )}\n//             </li>\n//           ))\n//         ) : (\n//           <p>No restaurants available</p>\n//         )}\n//       </ul>\n//     </div>\n//   );\n// };\n// export default RestaurantList;\n"],"mappings":"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AA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1E,CAAC,gBAENnE,OAAA;UAAA+D,QAAA,EAAG;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACpB;MAAA,GAdMX,UAAU,CAACC,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAelB,CACL,CAAC,gBAEFnE,OAAA;QAAA+D,QAAA,EAAG;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC/B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChE,EAAA,CA9NID,cAAc;EAAA,QAQDJ,WAAW;AAAA;AAAAmF,EAAA,GARxB/E,cAAc;AAgOpB,eAAeA,cAAc;;AAK7B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}