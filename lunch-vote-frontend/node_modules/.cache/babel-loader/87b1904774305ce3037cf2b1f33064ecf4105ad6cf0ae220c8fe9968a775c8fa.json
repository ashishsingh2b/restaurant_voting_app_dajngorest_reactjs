{"ast":null,"code":"\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link, useNavigate } from 'react-router-dom';\n// import './RestaurantList.css'; // Import the CSS file\n\n// const API_BASE_URL = 'http://127.0.0.1:8000/api/';\n\n// const RestaurantList = () => {\n//   const [restaurants, setRestaurants] = useState([]);\n//   const [votesLeft, setVotesLeft] = useState(0);\n//   const [newRestaurantName, setNewRestaurantName] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [currentVote, setCurrentVote] = useState({});\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Check authentication status and token\n//     const checkAuth = () => {\n//       const token = localStorage.getItem('access_token');\n//       setIsAuthenticated(!!token);\n//     };\n\n//     checkAuth();\n//   }, []);\n\n//   useEffect(() => {\n//     // Fetch restaurant data\n//     const fetchRestaurants = async () => {\n//       if (!isAuthenticated) return;\n\n//       try {\n//         const response = await axios.get(`${API_BASE_URL}restaurants/`, { \n//           headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } \n//         });\n\n//         const { restaurants, votesLeft: newVotesLeft } = response.data;\n\n//         setRestaurants(restaurants || []);\n//         setVotesLeft(newVotesLeft || 3);\n//       } catch (error) {\n//         console.error('Error fetching restaurants:', error);\n//         setError('Error fetching restaurants');\n//         setRestaurants([]);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchRestaurants();\n//   }, [isAuthenticated]);\n\n//   // RestaurantList.js\n//   const handleVote = async (restaurantId) => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: '/restaurants' } });\n//       return;\n//     }\n\n//     if (votesLeft <= 0) {\n//       alert('No votes left for today!');\n//       return;\n//     }\n\n//     const currentVoteValue = currentVote[restaurantId] || 'first';\n//     const voteOrder = ['first', 'second', 'third'];\n//     const nextVoteIndex = (voteOrder.indexOf(currentVoteValue) % 3) + 1;\n//     console.log(\"Calculation\",(voteOrder.indexOf(currentVoteValue) % 3) + 1)\n//     const nextVoteValue = voteOrder[nextVoteIndex];\n//     try {\n//       const response = await axios.post(`${API_BASE_URL}restaurants/vote/`,\n//         { restaurantId, voteType: currentVoteValue },\n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n\n//       const { restaurants, votesLeft: newVotesLeft } = response.data;\n\n//       setRestaurants(restaurants || []);\n//       setVotesLeft(newVotesLeft || votesLeft);\n//       setCurrentVote(prevVotes => ({ ...prevVotes, [restaurantId]: nextVoteValue }));\n\n//       // Determine vote points\n//       let votePoints = \"1 point\";\n//       console.log(\"CurrentVote\",currentVote[restaurantId])\n//       switch (currentVoteValue) {\n//         case 'first':\n//           votePoints = '1 point';\n//           break;\n//         case 'second':\n//           votePoints = '0.5 points';\n//           break;\n//         case 'third':\n//           votePoints = '0.25 points';\n//           break;\n//         default:\n//           votePoints = 'unknown';\n//       }\n\n//       // Adjust alert message based on current vote\n\n//       if (currentVoteValue === 'first') {\n//         alert(`You have cast a vote of ${votePoints}`);\n//       } else {\n//         alert(`You have updated your vote to ${votePoints}.`);\n//       }\n\n//     } catch (error) {\n//       handleApiError(error);\n//     }\n//   };\n\n//   const handleAddRestaurant = async () => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: '/restaurants' } });\n//       return;\n//     }\n\n//     if (!newRestaurantName.trim()) {\n//       alert('Please enter a valid restaurant name.');\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(`${API_BASE_URL}restaurants/add_restaurant/`, \n//         { name: newRestaurantName.trim() }, \n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n//       setRestaurants(prevRestaurants => [...prevRestaurants, response.data]);\n//       setNewRestaurantName('');\n//     } catch (error) {\n//       console.error('Error adding restaurant:', error);\n//       alert('An error occurred while adding the restaurant.');\n//     }\n//   };\n\n// const handleDeleteRestaurant = async (restaurantId) => {\n//   if (!isAuthenticated) {\n//     navigate('/login', { state: { from: `/restaurants` } });\n//     return;\n//   }\n\n//   try {\n//     const response = await axios.delete(`${API_BASE_URL}restaurants/${restaurantId}/delete-restaurant/`, {\n//       headers: {\n//         Authorization: `Bearer ${localStorage.getItem('access_token')}`\n//       }\n//     });\n//     if (response.status === 204) {\n//       setRestaurants(prevRestaurants => prevRestaurants.filter(restaurant => restaurant.id !== restaurantId));\n//     } else {\n//       console.error('Unexpected response status:', response.status);\n//     }\n//   } catch (error) {\n//     console.error('Error deleting restaurant:', error);\n//     alert('You are not authorized to delete this restaurant.');\n//   }\n// };\n\n//   const handleApiError = (error) => {\n//     console.error('API Error:', error);\n//     const errorMessage = error.response?.status === 403\n//       ? '\"Daily vote limit reached. Youâ€™ve already voted 3 times today.\"'\n//       : error.response?.status === 400\n//       ? 'An error occurred while processing your vote.'\n//       : 'An error occurred while voting.';\n//     alert(errorMessage);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Restaurants</h1>\n//       <p>Total number of restaurants: {restaurants.length}</p>\n//       <p>Vote left For Today {votesLeft}</p>\n//       {loading && <p className=\"loading\">Loading, please wait...</p>}\n//       {error && <p className=\"alert\">An error occurred: {error}</p>}\n\n//       {isAuthenticated ? (\n//         <div className=\"input-container\">\n//           <h2>Add New Restaurant</h2>\n//           <input \n//             type=\"text\" \n//             value={newRestaurantName} \n//             onChange={(e) => setNewRestaurantName(e.target.value)} \n//             placeholder=\"Restaurant Name\" \n//           />\n//           <button onClick={handleAddRestaurant}>Add Restaurant</button>\n//         </div>\n//       ) : (\n//         <p>Please log in to add a restaurant or vote.</p>\n//       )}\n//       <ul>\n//         {restaurants.length > 0 ? (\n//           restaurants.map((restaurant, index) => (\n//             <li key={restaurant.id}>\n//               <p>{index + 1}. {restaurant.name} - {restaurant.user.username} - Votes: {restaurant.total_votes || 0}</p>\n//               {isAuthenticated ? (\n//                 <div>\n//                   <button onClick={() => handleVote(restaurant.id)}>\n//                     Vote {currentVote[restaurant.id] === 'second' ? '0.5' : currentVote[restaurant.id] === 'third' ? '0.25' :  '1'}\n//                     {console.log(\"Current vote\",currentVote[restaurant.id])}\n//                   </button>\n//                   <Link to={`/edit-restaurant/${restaurant.id}/`} className=\"LinkButton\">Edit</Link>\n//                   <button onClick={() => handleDeleteRestaurant(restaurant.id)}>Delete</button>\n//                 </div>\n//               ) : (\n//                 <p>Login to vote</p>\n//               )}\n//             </li>\n//           ))\n//         ) : (\n//           <p>No restaurants available</p>\n//         )}\n//       </ul>\n//     </div>\n//   );\n// };\n// export default RestaurantList;","map":{"version":3,"names":[],"sources":["/home/ts/Desktop/Fullstack Practice/GSO TASK/lunch-vote-frontend/src/components/RestaurantList.js"],"sourcesContent":["\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link, useNavigate } from 'react-router-dom';\n// import './RestaurantList.css'; // Import the CSS file\n\n// const API_BASE_URL = 'http://127.0.0.1:8000/api/';\n\n// const RestaurantList = () => {\n//   const [restaurants, setRestaurants] = useState([]);\n//   const [votesLeft, setVotesLeft] = useState(0);\n//   const [newRestaurantName, setNewRestaurantName] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [currentVote, setCurrentVote] = useState({});\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Check authentication status and token\n//     const checkAuth = () => {\n//       const token = localStorage.getItem('access_token');\n//       setIsAuthenticated(!!token);\n//     };\n\n//     checkAuth();\n//   }, []);\n\n//   useEffect(() => {\n//     // Fetch restaurant data\n//     const fetchRestaurants = async () => {\n//       if (!isAuthenticated) return;\n\n//       try {\n//         const response = await axios.get(`${API_BASE_URL}restaurants/`, { \n//           headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } \n//         });\n\n//         const { restaurants, votesLeft: newVotesLeft } = response.data;\n\n//         setRestaurants(restaurants || []);\n//         setVotesLeft(newVotesLeft || 3);\n//       } catch (error) {\n//         console.error('Error fetching restaurants:', error);\n//         setError('Error fetching restaurants');\n//         setRestaurants([]);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchRestaurants();\n//   }, [isAuthenticated]);\n\n//   // RestaurantList.js\n//   const handleVote = async (restaurantId) => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: '/restaurants' } });\n//       return;\n//     }\n  \n//     if (votesLeft <= 0) {\n//       alert('No votes left for today!');\n//       return;\n//     }\n  \n//     const currentVoteValue = currentVote[restaurantId] || 'first';\n//     const voteOrder = ['first', 'second', 'third'];\n//     const nextVoteIndex = (voteOrder.indexOf(currentVoteValue) % 3) + 1;\n//     console.log(\"Calculation\",(voteOrder.indexOf(currentVoteValue) % 3) + 1)\n//     const nextVoteValue = voteOrder[nextVoteIndex];\n//     try {\n//       const response = await axios.post(`${API_BASE_URL}restaurants/vote/`,\n//         { restaurantId, voteType: currentVoteValue },\n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n  \n//       const { restaurants, votesLeft: newVotesLeft } = response.data;\n  \n//       setRestaurants(restaurants || []);\n//       setVotesLeft(newVotesLeft || votesLeft);\n//       setCurrentVote(prevVotes => ({ ...prevVotes, [restaurantId]: nextVoteValue }));\n  \n//       // Determine vote points\n//       let votePoints = \"1 point\";\n//       console.log(\"CurrentVote\",currentVote[restaurantId])\n//       switch (currentVoteValue) {\n//         case 'first':\n//           votePoints = '1 point';\n//           break;\n//         case 'second':\n//           votePoints = '0.5 points';\n//           break;\n//         case 'third':\n//           votePoints = '0.25 points';\n//           break;\n//         default:\n//           votePoints = 'unknown';\n//       }\n  \n//       // Adjust alert message based on current vote\n\n//       if (currentVoteValue === 'first') {\n//         alert(`You have cast a vote of ${votePoints}`);\n//       } else {\n//         alert(`You have updated your vote to ${votePoints}.`);\n//       }\n  \n//     } catch (error) {\n//       handleApiError(error);\n//     }\n//   };\n  \n\n  \n//   const handleAddRestaurant = async () => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: '/restaurants' } });\n//       return;\n//     }\n\n//     if (!newRestaurantName.trim()) {\n//       alert('Please enter a valid restaurant name.');\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(`${API_BASE_URL}restaurants/add_restaurant/`, \n//         { name: newRestaurantName.trim() }, \n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n//       setRestaurants(prevRestaurants => [...prevRestaurants, response.data]);\n//       setNewRestaurantName('');\n//     } catch (error) {\n//       console.error('Error adding restaurant:', error);\n//       alert('An error occurred while adding the restaurant.');\n//     }\n//   };\n\n// const handleDeleteRestaurant = async (restaurantId) => {\n//   if (!isAuthenticated) {\n//     navigate('/login', { state: { from: `/restaurants` } });\n//     return;\n//   }\n\n//   try {\n//     const response = await axios.delete(`${API_BASE_URL}restaurants/${restaurantId}/delete-restaurant/`, {\n//       headers: {\n//         Authorization: `Bearer ${localStorage.getItem('access_token')}`\n//       }\n//     });\n//     if (response.status === 204) {\n//       setRestaurants(prevRestaurants => prevRestaurants.filter(restaurant => restaurant.id !== restaurantId));\n//     } else {\n//       console.error('Unexpected response status:', response.status);\n//     }\n//   } catch (error) {\n//     console.error('Error deleting restaurant:', error);\n//     alert('You are not authorized to delete this restaurant.');\n//   }\n// };\n\n//   const handleApiError = (error) => {\n//     console.error('API Error:', error);\n//     const errorMessage = error.response?.status === 403\n//       ? '\"Daily vote limit reached. Youâ€™ve already voted 3 times today.\"'\n//       : error.response?.status === 400\n//       ? 'An error occurred while processing your vote.'\n//       : 'An error occurred while voting.';\n//     alert(errorMessage);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Restaurants</h1>\n//       <p>Total number of restaurants: {restaurants.length}</p>\n//       <p>Vote left For Today {votesLeft}</p>\n//       {loading && <p className=\"loading\">Loading, please wait...</p>}\n//       {error && <p className=\"alert\">An error occurred: {error}</p>}\n\n//       {isAuthenticated ? (\n//         <div className=\"input-container\">\n//           <h2>Add New Restaurant</h2>\n//           <input \n//             type=\"text\" \n//             value={newRestaurantName} \n//             onChange={(e) => setNewRestaurantName(e.target.value)} \n//             placeholder=\"Restaurant Name\" \n//           />\n//           <button onClick={handleAddRestaurant}>Add Restaurant</button>\n//         </div>\n//       ) : (\n//         <p>Please log in to add a restaurant or vote.</p>\n//       )}\n//       <ul>\n//         {restaurants.length > 0 ? (\n//           restaurants.map((restaurant, index) => (\n//             <li key={restaurant.id}>\n//               <p>{index + 1}. {restaurant.name} - {restaurant.user.username} - Votes: {restaurant.total_votes || 0}</p>\n//               {isAuthenticated ? (\n//                 <div>\n//                   <button onClick={() => handleVote(restaurant.id)}>\n//                     Vote {currentVote[restaurant.id] === 'second' ? '0.5' : currentVote[restaurant.id] === 'third' ? '0.25' :  '1'}\n//                     {console.log(\"Current vote\",currentVote[restaurant.id])}\n//                   </button>\n//                   <Link to={`/edit-restaurant/${restaurant.id}/`} className=\"LinkButton\">Edit</Link>\n//                   <button onClick={() => handleDeleteRestaurant(restaurant.id)}>Delete</button>\n//                 </div>\n//               ) : (\n//                 <p>Login to vote</p>\n//               )}\n//             </li>\n//           ))\n//         ) : (\n//           <p>No restaurants available</p>\n//         )}\n//       </ul>\n//     </div>\n//   );\n// };\n// export default RestaurantList;\n"],"mappings":";AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}