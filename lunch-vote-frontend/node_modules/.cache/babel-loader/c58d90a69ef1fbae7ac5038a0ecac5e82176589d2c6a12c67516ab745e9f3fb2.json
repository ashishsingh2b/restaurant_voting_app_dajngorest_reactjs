{"ast":null,"code":"var _jsxFileName = \"/home/ts/Desktop/Fullstack Practice/GSO TASK/lunch-vote-frontend/src/components/WinnerDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WinnerDisplay = () => {\n  _s();\n  const [winner, setWinner] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch winner history from API\n    axios.get('http://127.0.0.1:8000/api/restaurants/history/', {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('access_token')}`\n      }\n    }).then(response => {\n      // Assuming response.data is an array and the latest winner is the first element\n      const latest = response.data[0]; // Adjust based on your response structure\n      if (latest && latest.winner) {\n        setWinner(latest.winner);\n      } else {\n        setWinner(null);\n      }\n    }).catch(err => {\n      setError('Error fetching winner history');\n      console.error('Error fetching winner history', err);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Today's Winner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: winner.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No winner yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 44\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(WinnerDisplay, \"csz5LbsldnAafagu1U8THbRc0uA=\");\n_c = WinnerDisplay;\nexport default WinnerDisplay;\nvar _c;\n$RefreshReg$(_c, \"WinnerDisplay\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","WinnerDisplay","_s","winner","setWinner","loading","setLoading","error","setError","get","headers","Authorization","localStorage","getItem","then","response","latest","data","catch","err","console","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["/home/ts/Desktop/Fullstack Practice/GSO TASK/lunch-vote-frontend/src/components/WinnerDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst WinnerDisplay = () => {\n  const [winner, setWinner] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Fetch winner history from API\n    axios.get('http://127.0.0.1:8000/api/restaurants/history/', {\n      headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n    })\n      .then(response => {\n        // Assuming response.data is an array and the latest winner is the first element\n        const latest = response.data[0];  // Adjust based on your response structure\n        if (latest && latest.winner) {\n          setWinner(latest.winner);\n        } else {\n          setWinner(null);\n        }\n      })\n      .catch(err => {\n        setError('Error fetching winner history');\n        console.error('Error fetching winner history', err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Today's Winner</h1>\n      {winner ? <div>{winner.name}</div> : <div>No winner yet</div>}\n    </div>\n  );\n};\n\nexport default WinnerDisplay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACW,GAAG,CAAC,gDAAgD,EAAE;MAC1DC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAAG;IAC7E,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAI;MAChB;MACA,MAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE;MAClC,IAAID,MAAM,IAAIA,MAAM,CAACb,MAAM,EAAE;QAC3BC,SAAS,CAACY,MAAM,CAACb,MAAM,CAAC;MAC1B,CAAC,MAAM;QACLC,SAAS,CAAC,IAAI,CAAC;MACjB;IACF,CAAC,CAAC,CACDc,KAAK,CAACC,GAAG,IAAI;MACZX,QAAQ,CAAC,+BAA+B,CAAC;MACzCY,OAAO,CAACb,KAAK,CAAC,+BAA+B,EAAEY,GAAG,CAAC;IACrD,CAAC,CAAC,CACDE,OAAO,CAAC,MAAM;MACbf,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAsB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAInB,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAsB,QAAA,EAAMf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3B;EAEA,oBACE1B,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBvB,MAAM,gBAAGH,OAAA;MAAAsB,QAAA,EAAMnB,MAAM,CAACwB;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAAG1B,OAAA;MAAAsB,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAACxB,EAAA,CA1CID,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AA4CnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}