{"ast":null,"code":"var _jsxFileName = \"/home/ts/Desktop/Fullstack Practice/GSO TASK/lunch-vote-frontend/src/components/RestaurantList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './RestaurantList.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantList = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [votesLeft, setVotesLeft] = useState(0);\n  const [newRestaurantName, setNewRestaurantName] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [votedRestaurants, setVotedRestaurants] = useState(new Set());\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkAuth = () => {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        // Validate token with a test request\n        setIsAuthenticated(true);\n      } else {\n        setIsAuthenticated(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/api/restaurants/restaurants/', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('access_token')}`\n          }\n        });\n        console.log(response.data);\n        setRestaurants(response.data.restaurants || []);\n        setVotesLeft(response.data.votesLeft || 0);\n        setVotedRestaurants(new Set(response.data.votedRestaurants || []));\n      } catch (error) {\n        console.error('Error fetching restaurants:', error);\n        setError('Error fetching restaurants');\n        setRestaurants([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (isAuthenticated) {\n      fetchRestaurants();\n    }\n  }, [isAuthenticated]);\n  const handleVote = async (restaurantId, voteType) => {\n    if (!isAuthenticated) {\n      alert('Please log in to vote.');\n      return;\n    }\n    if (votesLeft <= 0) {\n      alert('No votes left for today!');\n      return;\n    }\n    if (votedRestaurants.has(voteType)) {\n      alert(`You have already used your ${voteType} vote today.`);\n      return;\n    }\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/api/restaurants/restaurants/vote/', {\n        restaurantId,\n        voteType\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      const {\n        restaurants,\n        votesLeft: newVotesLeft,\n        votedRestaurants: newVotedRestaurants\n      } = response.data;\n      setRestaurants(restaurants || []);\n      setVotesLeft(newVotesLeft || votesLeft);\n      setVotedRestaurants(new Set(newVotedRestaurants || []));\n      switch (voteType) {\n        case 'first':\n          alert('You have cast a vote of 1 point.');\n          break;\n        case 'second':\n          alert('You have cast a vote of 0.5 points.');\n          break;\n        case 'third':\n          alert('You have cast a vote of 0.25 points.');\n          break;\n        default:\n          alert('Your vote has been recorded.');\n      }\n    } catch (error) {\n      console.error('Error voting:', error);\n      if (error.response && error.response.status === 403) {\n        alert('You have already voted for this restaurant today.');\n      } else if (error.response && error.response.status === 400) {\n        alert('An error occurred while processing your vote.');\n      } else {\n        alert('An error occurred while voting.');\n      }\n    }\n  };\n  const handleAddRestaurant = async () => {\n    if (!isAuthenticated) {\n      alert('Please log in to add a restaurant.');\n      return;\n    }\n    if (!newRestaurantName) {\n      alert('Please enter a restaurant name.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/api/restaurants/restaurants/add_restaurant/', {\n        name: newRestaurantName\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      setRestaurants([...restaurants, response.data]);\n      setNewRestaurantName('');\n    } catch (error) {\n      console.error('Error adding restaurant:', error);\n      alert('An error occurred while adding the restaurant.');\n    }\n  };\n  const handleUpdateRestaurant = (restaurantId, restaurantName) => {\n    if (!isAuthenticated) {\n      alert('Please log in to update a restaurant.');\n      return;\n    }\n    navigate(`/edit-restaurant/${restaurantId}`);\n  };\n  const handleDeleteRestaurant = async restaurantId => {\n    if (!isAuthenticated) {\n      alert('Please log in to delete a restaurant.');\n      return;\n    }\n    try {\n      await axios.delete(`http://127.0.0.1:8000/api/restaurants/restaurants/${restaurantId}/`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      setRestaurants(restaurants.filter(restaurant => restaurant.id !== restaurantId));\n    } catch (error) {\n      console.error('Error deleting restaurant:', error);\n      alert('An error occurred while deleting the restaurant.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [console.log(\"Restaurent Data\", restaurants), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Restaurants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Votes left today: \", votesLeft]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newRestaurantName,\n        onChange: e => setNewRestaurantName(e.target.value),\n        placeholder: \"Restaurant Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddRestaurant,\n        children: \"Add Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in to add a restaurant or vote.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(restaurants) && restaurants.length > 0 ? restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [restaurant.name, \" - Votes: \", restaurant.votes || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVote(restaurant.id, 'first'),\n            children: \"Vote 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVote(restaurant.id, 'second'),\n            children: \"Vote 0.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVote(restaurant.id, 'third'),\n            children: \"Vote 0.25\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdateRestaurant(restaurant.id, restaurant.name),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteRestaurant(restaurant.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Login to vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this)]\n      }, restaurant.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No restaurants available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantList, \"U64a3jUNe+D0JFrQ9j/vxWsDfZM=\", false, function () {\n  return [useNavigate];\n});\n_c = RestaurantList;\nexport default RestaurantList;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const RestaurantList = () => {\n//   const [restaurants, setRestaurants] = useState([]);\n//   const [votesLeft, setVotesLeft] = useState(3);\n//   const [newRestaurantName, setNewRestaurantName] = useState('');\n//   const [editRestaurantId, setEditRestaurantId] = useState(null);\n//   const [editRestaurantName, setEditRestaurantName] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [votedRestaurants, setVotedRestaurants] = useState(new Set());\n\n//   useEffect(() => {\n//     const checkAuth = () => {\n//       const token = localStorage.getItem('access_token');\n//       if (token) {\n//         // Validate token with a test request\n//         setIsAuthenticated(true);\n//       } else {\n//         setIsAuthenticated(false);\n//       }\n//     };\n\n//     checkAuth();\n//   }, []);\n\n//   useEffect(() => {\n//     const fetchRestaurants = async () => {\n//       setLoading(true);\n//       try {\n//         const response = await axios.get('http://127.0.0.1:8000/api/restaurants/restaurants/', { \n//           headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } \n//         });\n//         setRestaurants(response.data.restaurants || []);\n//         setVotesLeft(response.data.votesLeft || 3);\n//         setVotedRestaurants(new Set(response.data.votedRestaurants || []));\n//       } catch (error) {\n//         console.error('Error fetching restaurants:', error);\n//         setError('Error fetching restaurants');\n//         setRestaurants([]);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     if (isAuthenticated) {\n//       fetchRestaurants();\n//     }\n//   }, [isAuthenticated]);\n\n//   const handleVote = async (restaurantId, voteType) => {\n//     if (!isAuthenticated) {\n//       alert('Please log in to vote.');\n//       return;\n//     }\n\n//     if (votesLeft <= 0) {\n//       alert('No votes left for today!');\n//       return;\n//     }\n\n//     // Check if the user has already voted for this type today\n//     if (votedRestaurants.has(voteType)) {\n//       alert(`You have already used your ${voteType} vote today.`);\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post('http://127.0.0.1:8000/api/restaurants/restaurants/vote/', \n//         { restaurantId, voteType }, \n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n\n//       const { restaurants, votesLeft: newVotesLeft, votedRestaurants: newVotedRestaurants } = response.data;\n\n//       // Update state based on server response\n//       setRestaurants(restaurants || []);\n//       setVotesLeft(newVotesLeft || votesLeft); // Update votesLeft from the server response\n//       setVotedRestaurants(new Set(newVotedRestaurants || []));\n\n//       // Alert based on voteType\n//       switch (voteType) {\n//         case 'first':\n//           alert('You have cast a vote of 1 point.');\n//           break;\n//         case 'second':\n//           alert('You have cast a vote of 0.5 points.');\n//           break;\n//         case 'third':\n//           alert('You have cast a vote of 0.25 points.');\n//           break;\n//         default:\n//           alert('Your vote has been recorded.');\n//       }\n//     } catch (error) {\n//       console.error('Error voting:', error);\n//       if (error.response && error.response.status === 403) {\n//         alert('You have already voted for this restaurant today.');\n//       } else if (error.response && error.response.status === 400) {\n//         alert('An error occurred while processing your vote.');\n//       } else {\n//         alert('An error occurred while voting.');\n//       }\n//     }\n//   };\n\n//   const handleAddRestaurant = async () => {\n//     if (!isAuthenticated) {\n//       alert('Please log in to add a restaurant.');\n//       return;\n//     }\n\n//     if (!newRestaurantName) {\n//       alert('Please enter a restaurant name.');\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post('http://127.0.0.1:8000/api/restaurants/restaurants/add_restaurant/', \n//         { name: newRestaurantName }, \n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n//       setRestaurants([...restaurants, response.data]);\n//       setNewRestaurantName('');\n//     } catch (error) {\n//       console.error('Error adding restaurant:', error);\n//       alert('An error occurred while adding the restaurant.');\n//     }\n//   };\n\n//   const handleUpdateRestaurant = async () => {\n//     if (!isAuthenticated) {\n//       alert('Please log in to update a restaurant.');\n//       return;\n//     }\n\n//     if (!editRestaurantName) {\n//       alert('Please enter a restaurant name.');\n//       return;\n//     }\n\n//     try {\n//       await axios.put(`http://127.0.0.1:8000/api/restaurants/restaurants/${editRestaurantId}/`, \n//         { name: editRestaurantName }, \n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n//       const updatedRestaurants = restaurants.map(restaurant => \n//         restaurant.id === editRestaurantId ? { ...restaurant, name: editRestaurantName } : restaurant\n//       );\n//       setRestaurants(updatedRestaurants);\n//       setEditRestaurantId(null);\n//       setEditRestaurantName('');\n//     } catch (error) {\n//       console.error('Error updating restaurant:', error);\n//       alert('An error occurred while updating the restaurant.');\n//     }\n//   };\n\n//   const handleDeleteRestaurant = async (restaurantId) => {\n//     if (!isAuthenticated) {\n//       alert('Please log in to delete a restaurant.');\n//       return;\n//     }\n\n//     try {\n//       await axios.delete(`http://127.0.0.1:8000/api/restaurants/restaurants/${restaurantId}/`, \n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n//       setRestaurants(restaurants.filter(restaurant => restaurant.id !== restaurantId));\n//     } catch (error) {\n//       console.error('Error deleting restaurant:', error);\n//       alert('An error occurred while deleting the restaurant.');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Restaurants</h1>\n//       <p>Votes left today: {votesLeft}</p>\n//       {loading && <p>Loading...</p>}\n//       {error && <p>{error}</p>}\n\n//       {isAuthenticated ? (\n//         <div>\n//           <h2>Add New Restaurant</h2>\n//           <input \n//             type=\"text\" \n//             value={newRestaurantName} \n//             onChange={(e) => setNewRestaurantName(e.target.value)} \n//             placeholder=\"Restaurant Name\" \n//           />\n//           <button onClick={handleAddRestaurant}>Add Restaurant</button>\n//         </div>\n//       ) : (\n//         <p>Please log in to add a restaurant or vote.</p>\n//       )}\n\n//       {isAuthenticated && editRestaurantId && (\n//         <div>\n//           <h2>Update Restaurant</h2>\n//           <input \n//             type=\"text\" \n//             value={editRestaurantName} \n//             onChange={(e) => setEditRestaurantName(e.target.value)} \n//             placeholder=\"New Restaurant Name\" \n//           />\n//           <button onClick={handleUpdateRestaurant}>Update Restaurant</button>\n//         </div>\n//       )}\n\n//       <ul>\n//         {Array.isArray(restaurants) && restaurants.length > 0 ? (\n//           restaurants.map(restaurant => (\n//             <li key={restaurant.id}>\n//               {restaurant.name} - Votes: {restaurant.votes || 0}\n//               {isAuthenticated ? (\n//                 <>\n//                   <button onClick={() => handleVote(restaurant.id, 'first')}>Vote 1</button>\n//                   <button onClick={() => handleVote(restaurant.id, 'second')}>Vote 0.5</button>\n//                   <button onClick={() => handleVote(restaurant.id, 'third')}>Vote 0.25</button>\n//                   <button onClick={() => { setEditRestaurantId(restaurant.id); setEditRestaurantName(restaurant.name); }}>Edit</button>\n//                   <button onClick={() => handleDeleteRestaurant(restaurant.id)}>Delete</button>\n//                 </>\n//               ) : (\n//                 <p>Login to vote</p>\n//               )}\n//             </li>\n//           ))\n//         ) : (\n//           <p>No restaurants available</p>\n//         )}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default RestaurantList;\nvar _c;\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","RestaurantList","_s","restaurants","setRestaurants","votesLeft","setVotesLeft","newRestaurantName","setNewRestaurantName","error","setError","loading","setLoading","isAuthenticated","setIsAuthenticated","votedRestaurants","setVotedRestaurants","Set","navigate","checkAuth","token","localStorage","getItem","fetchRestaurants","response","get","headers","Authorization","console","log","data","handleVote","restaurantId","voteType","alert","has","post","newVotesLeft","newVotedRestaurants","status","handleAddRestaurant","name","handleUpdateRestaurant","restaurantName","handleDeleteRestaurant","delete","filter","restaurant","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","Array","isArray","length","map","votes","_c","$RefreshReg$"],"sources":["/home/ts/Desktop/Fullstack Practice/GSO TASK/lunch-vote-frontend/src/components/RestaurantList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './RestaurantList.css'; // Import the CSS file\n\nconst RestaurantList = () => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [votesLeft, setVotesLeft] = useState(0);\n  const [newRestaurantName, setNewRestaurantName] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [votedRestaurants, setVotedRestaurants] = useState(new Set());\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const checkAuth = () => {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        // Validate token with a test request\n        setIsAuthenticated(true);\n      } else {\n        setIsAuthenticated(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/api/restaurants/restaurants/', { \n          headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } \n        });\n        console.log(response.data)\n        setRestaurants(response.data.restaurants || []);\n        setVotesLeft(response.data.votesLeft || 0);\n        setVotedRestaurants(new Set(response.data.votedRestaurants || []));\n      } catch (error) {\n        console.error('Error fetching restaurants:', error);\n        setError('Error fetching restaurants');\n        setRestaurants([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (isAuthenticated) {\n      fetchRestaurants();\n    }\n  }, [isAuthenticated]);\n\n  const handleVote = async (restaurantId, voteType) => {\n    if (!isAuthenticated) {\n      alert('Please log in to vote.');\n      return;\n    }\n  \n    if (votesLeft <= 0) {\n      alert('No votes left for today!');\n      return;\n    }\n  \n    if (votedRestaurants.has(voteType)) {\n      alert(`You have already used your ${voteType} vote today.`);\n      return;\n    }\n  \n    try {\n      const response = await axios.post('http://127.0.0.1:8000/api/restaurants/restaurants/vote/', \n        { restaurantId, voteType }, \n        { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n      );\n  \n      const { restaurants, votesLeft: newVotesLeft, votedRestaurants: newVotedRestaurants } = response.data;\n  \n      setRestaurants(restaurants || []);\n      setVotesLeft(newVotesLeft || votesLeft);\n      setVotedRestaurants(new Set(newVotedRestaurants || []));\n  \n      switch (voteType) {\n        case 'first':\n          alert('You have cast a vote of 1 point.');\n          break;\n        case 'second':\n          alert('You have cast a vote of 0.5 points.');\n          break;\n        case 'third':\n          alert('You have cast a vote of 0.25 points.');\n          break;\n        default:\n          alert('Your vote has been recorded.');\n      }\n    } catch (error) {\n      console.error('Error voting:', error);\n      if (error.response && error.response.status === 403) {\n        alert('You have already voted for this restaurant today.');\n      } else if (error.response && error.response.status === 400) {\n        alert('An error occurred while processing your vote.');\n      } else {\n        alert('An error occurred while voting.');\n      }\n    }\n  };\n  \n  const handleAddRestaurant = async () => {\n    if (!isAuthenticated) {\n      alert('Please log in to add a restaurant.');\n      return;\n    }\n\n    if (!newRestaurantName) {\n      alert('Please enter a restaurant name.');\n      return;\n    }\n\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/api/restaurants/restaurants/add_restaurant/', \n        { name: newRestaurantName }, \n        { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n      );\n      setRestaurants([...restaurants, response.data]);\n      setNewRestaurantName('');\n    } catch (error) {\n      console.error('Error adding restaurant:', error);\n      alert('An error occurred while adding the restaurant.');\n    }\n  };\n\n  const handleUpdateRestaurant = (restaurantId, restaurantName) => {\n    if (!isAuthenticated) {\n      alert('Please log in to update a restaurant.');\n      return;\n    }\n    navigate(`/edit-restaurant/${restaurantId}`);\n  };\n\n  const handleDeleteRestaurant = async (restaurantId) => {\n    if (!isAuthenticated) {\n      alert('Please log in to delete a restaurant.');\n      return;\n    }\n\n    try {\n      await axios.delete(`http://127.0.0.1:8000/api/restaurants/restaurants/${restaurantId}/`, \n        { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n      );\n      setRestaurants(restaurants.filter(restaurant => restaurant.id !== restaurantId));\n    } catch (error) {\n      console.error('Error deleting restaurant:', error);\n      alert('An error occurred while deleting the restaurant.');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {console.log(\"Restaurent Data\",restaurants)}\n      <h1>Restaurants</h1>\n      <p>Votes left today: {votesLeft}</p>\n      {loading && <p className=\"loading\">Loading...</p>}\n      {error && <p className=\"alert\">{error}</p>}\n\n      {isAuthenticated ? (\n        <div className=\"input-container\">\n          <h2>Add New Restaurant</h2>\n          <input \n            type=\"text\" \n            value={newRestaurantName} \n            onChange={(e) => setNewRestaurantName(e.target.value)} \n            placeholder=\"Restaurant Name\" \n          />\n          <button onClick={handleAddRestaurant}>Add Restaurant</button>\n        </div>\n      ) : (\n        <p>Please log in to add a restaurant or vote.</p>\n      )}\n\n      <ul>\n        {Array.isArray(restaurants) && restaurants.length > 0 ? (\n          restaurants.map(restaurant => (\n            <li key={restaurant.id}>\n              <p>{restaurant.name} - Votes: {restaurant.votes || 0}</p>\n              {isAuthenticated ? (\n                <div>\n                  <button onClick={() => handleVote(restaurant.id, 'first')}>Vote 1</button>\n                  <button onClick={() => handleVote(restaurant.id, 'second')}>Vote 0.5</button>\n                  <button onClick={() => handleVote(restaurant.id, 'third')}>Vote 0.25</button>\n                  <button onClick={() => handleUpdateRestaurant(restaurant.id, restaurant.name)}>Edit</button>\n                  <button onClick={() => handleDeleteRestaurant(restaurant.id)}>Delete</button>\n                </div>\n              ) : (\n                <p>Login to vote</p>\n              )}\n            </li>\n          ))\n        ) : (\n          <p>No restaurants available</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default RestaurantList;\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const RestaurantList = () => {\n//   const [restaurants, setRestaurants] = useState([]);\n//   const [votesLeft, setVotesLeft] = useState(3);\n//   const [newRestaurantName, setNewRestaurantName] = useState('');\n//   const [editRestaurantId, setEditRestaurantId] = useState(null);\n//   const [editRestaurantName, setEditRestaurantName] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [votedRestaurants, setVotedRestaurants] = useState(new Set());\n\n//   useEffect(() => {\n//     const checkAuth = () => {\n//       const token = localStorage.getItem('access_token');\n//       if (token) {\n//         // Validate token with a test request\n//         setIsAuthenticated(true);\n//       } else {\n//         setIsAuthenticated(false);\n//       }\n//     };\n\n//     checkAuth();\n//   }, []);\n\n//   useEffect(() => {\n//     const fetchRestaurants = async () => {\n//       setLoading(true);\n//       try {\n//         const response = await axios.get('http://127.0.0.1:8000/api/restaurants/restaurants/', { \n//           headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } \n//         });\n//         setRestaurants(response.data.restaurants || []);\n//         setVotesLeft(response.data.votesLeft || 3);\n//         setVotedRestaurants(new Set(response.data.votedRestaurants || []));\n//       } catch (error) {\n//         console.error('Error fetching restaurants:', error);\n//         setError('Error fetching restaurants');\n//         setRestaurants([]);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     if (isAuthenticated) {\n//       fetchRestaurants();\n//     }\n//   }, [isAuthenticated]);\n\n//   const handleVote = async (restaurantId, voteType) => {\n//     if (!isAuthenticated) {\n//       alert('Please log in to vote.');\n//       return;\n//     }\n  \n//     if (votesLeft <= 0) {\n//       alert('No votes left for today!');\n//       return;\n//     }\n  \n//     // Check if the user has already voted for this type today\n//     if (votedRestaurants.has(voteType)) {\n//       alert(`You have already used your ${voteType} vote today.`);\n//       return;\n//     }\n  \n//     try {\n//       const response = await axios.post('http://127.0.0.1:8000/api/restaurants/restaurants/vote/', \n//         { restaurantId, voteType }, \n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n  \n//       const { restaurants, votesLeft: newVotesLeft, votedRestaurants: newVotedRestaurants } = response.data;\n  \n//       // Update state based on server response\n//       setRestaurants(restaurants || []);\n//       setVotesLeft(newVotesLeft || votesLeft); // Update votesLeft from the server response\n//       setVotedRestaurants(new Set(newVotedRestaurants || []));\n  \n//       // Alert based on voteType\n//       switch (voteType) {\n//         case 'first':\n//           alert('You have cast a vote of 1 point.');\n//           break;\n//         case 'second':\n//           alert('You have cast a vote of 0.5 points.');\n//           break;\n//         case 'third':\n//           alert('You have cast a vote of 0.25 points.');\n//           break;\n//         default:\n//           alert('Your vote has been recorded.');\n//       }\n//     } catch (error) {\n//       console.error('Error voting:', error);\n//       if (error.response && error.response.status === 403) {\n//         alert('You have already voted for this restaurant today.');\n//       } else if (error.response && error.response.status === 400) {\n//         alert('An error occurred while processing your vote.');\n//       } else {\n//         alert('An error occurred while voting.');\n//       }\n//     }\n//   };\n  \n//   const handleAddRestaurant = async () => {\n//     if (!isAuthenticated) {\n//       alert('Please log in to add a restaurant.');\n//       return;\n//     }\n\n//     if (!newRestaurantName) {\n//       alert('Please enter a restaurant name.');\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post('http://127.0.0.1:8000/api/restaurants/restaurants/add_restaurant/', \n//         { name: newRestaurantName }, \n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n//       setRestaurants([...restaurants, response.data]);\n//       setNewRestaurantName('');\n//     } catch (error) {\n//       console.error('Error adding restaurant:', error);\n//       alert('An error occurred while adding the restaurant.');\n//     }\n//   };\n\n//   const handleUpdateRestaurant = async () => {\n//     if (!isAuthenticated) {\n//       alert('Please log in to update a restaurant.');\n//       return;\n//     }\n\n//     if (!editRestaurantName) {\n//       alert('Please enter a restaurant name.');\n//       return;\n//     }\n\n//     try {\n//       await axios.put(`http://127.0.0.1:8000/api/restaurants/restaurants/${editRestaurantId}/`, \n//         { name: editRestaurantName }, \n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n//       const updatedRestaurants = restaurants.map(restaurant => \n//         restaurant.id === editRestaurantId ? { ...restaurant, name: editRestaurantName } : restaurant\n//       );\n//       setRestaurants(updatedRestaurants);\n//       setEditRestaurantId(null);\n//       setEditRestaurantName('');\n//     } catch (error) {\n//       console.error('Error updating restaurant:', error);\n//       alert('An error occurred while updating the restaurant.');\n//     }\n//   };\n\n//   const handleDeleteRestaurant = async (restaurantId) => {\n//     if (!isAuthenticated) {\n//       alert('Please log in to delete a restaurant.');\n//       return;\n//     }\n\n//     try {\n//       await axios.delete(`http://127.0.0.1:8000/api/restaurants/restaurants/${restaurantId}/`, \n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n//       setRestaurants(restaurants.filter(restaurant => restaurant.id !== restaurantId));\n//     } catch (error) {\n//       console.error('Error deleting restaurant:', error);\n//       alert('An error occurred while deleting the restaurant.');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Restaurants</h1>\n//       <p>Votes left today: {votesLeft}</p>\n//       {loading && <p>Loading...</p>}\n//       {error && <p>{error}</p>}\n\n//       {isAuthenticated ? (\n//         <div>\n//           <h2>Add New Restaurant</h2>\n//           <input \n//             type=\"text\" \n//             value={newRestaurantName} \n//             onChange={(e) => setNewRestaurantName(e.target.value)} \n//             placeholder=\"Restaurant Name\" \n//           />\n//           <button onClick={handleAddRestaurant}>Add Restaurant</button>\n//         </div>\n//       ) : (\n//         <p>Please log in to add a restaurant or vote.</p>\n//       )}\n\n//       {isAuthenticated && editRestaurantId && (\n//         <div>\n//           <h2>Update Restaurant</h2>\n//           <input \n//             type=\"text\" \n//             value={editRestaurantName} \n//             onChange={(e) => setEditRestaurantName(e.target.value)} \n//             placeholder=\"New Restaurant Name\" \n//           />\n//           <button onClick={handleUpdateRestaurant}>Update Restaurant</button>\n//         </div>\n//       )}\n\n//       <ul>\n//         {Array.isArray(restaurants) && restaurants.length > 0 ? (\n//           restaurants.map(restaurant => (\n//             <li key={restaurant.id}>\n//               {restaurant.name} - Votes: {restaurant.votes || 0}\n//               {isAuthenticated ? (\n//                 <>\n//                   <button onClick={() => handleVote(restaurant.id, 'first')}>Vote 1</button>\n//                   <button onClick={() => handleVote(restaurant.id, 'second')}>Vote 0.5</button>\n//                   <button onClick={() => handleVote(restaurant.id, 'third')}>Vote 0.25</button>\n//                   <button onClick={() => { setEditRestaurantId(restaurant.id); setEditRestaurantName(restaurant.name); }}>Edit</button>\n//                   <button onClick={() => handleDeleteRestaurant(restaurant.id)}>Delete</button>\n//                 </>\n//               ) : (\n//                 <p>Login to vote</p>\n//               )}\n//             </li>\n//           ))\n//         ) : (\n//           <p>No restaurants available</p>\n//         )}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default RestaurantList;\n"],"mappings":"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AAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACpD,EAAA,CAtMID,cAAc;EAAA,QAQDH,WAAW;AAAA;AAAAqE,EAAA,GARxBlE,cAAc;AAwMpB,eAAeA,cAAc;;AAS7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}