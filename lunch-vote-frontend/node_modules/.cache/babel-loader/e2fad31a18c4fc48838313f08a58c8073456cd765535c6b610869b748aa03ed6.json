{"ast":null,"code":"var _jsxFileName = \"/home/ts/Desktop/Fullstack Practice/GSO TASK/lunch-vote-frontend/src/components/RestaurantList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './RestaurantList.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://127.0.0.1:8000/api/';\nconst RestaurantList = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [votesLeft, setVotesLeft] = useState(0);\n  const [newRestaurantName, setNewRestaurantName] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userVotes, setUserVotes] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check authentication status and token\n    const checkAuth = () => {\n      const token = localStorage.getItem('access_token');\n      setIsAuthenticated(!!token);\n    };\n    checkAuth();\n  }, []);\n  useEffect(() => {\n    // Fetch restaurant data\n    const fetchRestaurants = async () => {\n      if (!isAuthenticated) return;\n      try {\n        const response = await axios.get(`${API_BASE_URL}restaurants/`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('access_token')}`\n          }\n        });\n        const {\n          restaurants,\n          votesLeft: newVotesLeft\n        } = response.data;\n        setRestaurants(restaurants || []);\n        setVotesLeft(newVotesLeft || 3);\n\n        // Store user votes\n        const votes = {};\n        restaurants.forEach(restaurant => {\n          votes[restaurant.id] = restaurant.user_vote || 'none';\n        });\n        setUserVotes(votes);\n      } catch (error) {\n        console.error('Error fetching restaurants:', error);\n        setError('Error fetching restaurants');\n        setRestaurants([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRestaurants();\n  }, [isAuthenticated]);\n  const handleVote = async restaurantId => {\n    if (!isAuthenticated) {\n      navigate('/login', {\n        state: {\n          from: '/restaurants'\n        }\n      });\n      return;\n    }\n    if (votesLeft <= 0) {\n      alert('No votes left for today!');\n      return;\n    }\n    const currentVoteValue = userVotes[restaurantId] || 'first';\n    const voteOrder = ['first', 'second', 'third'];\n    const nextVoteIndex = (voteOrder.indexOf(currentVoteValue) + 1) % 3;\n    const nextVoteValue = voteOrder[nextVoteIndex];\n    try {\n      const response = await axios.post(`${API_BASE_URL}restaurants/vote/`, {\n        restaurantId,\n        voteType: nextVoteValue\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      console.log;\n      const {\n        restaurants,\n        votesLeft: newVotesLeft\n      } = response.data;\n      setRestaurants(restaurants || []);\n      setVotesLeft(newVotesLeft || votesLeft);\n      setUserVotes(prevVotes => ({\n        ...prevVotes,\n        [restaurantId]: nextVoteValue\n      }));\n\n      // Determine vote points\n      const votePoints = {\n        'first': '1 point',\n        'second': '0.5 points',\n        'third': '0.25 points'\n      }[nextVoteValue] || 'unknown';\n      alert(`You have updated your vote to ${votePoints}.`);\n    } catch (error) {\n      handleApiError(error);\n    }\n  };\n  const handleAddRestaurant = async () => {\n    if (!isAuthenticated) {\n      navigate('/login', {\n        state: {\n          from: '/restaurants'\n        }\n      });\n      return;\n    }\n    if (!newRestaurantName.trim()) {\n      alert('Please enter a valid restaurant name.');\n      return;\n    }\n    try {\n      const response = await axios.post(`${API_BASE_URL}restaurants/add_restaurant/`, {\n        name: newRestaurantName.trim()\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      setRestaurants(prevRestaurants => [...prevRestaurants, response.data]);\n      setNewRestaurantName('');\n    } catch (error) {\n      console.error('Error adding restaurant:', error);\n      alert('An error occurred while adding the restaurant.');\n    }\n  };\n  const handleDeleteRestaurant = async restaurantId => {\n    if (!isAuthenticated) {\n      navigate('/login', {\n        state: {\n          from: `/restaurants`\n        }\n      });\n      return;\n    }\n    try {\n      const response = await axios.delete(`${API_BASE_URL}restaurants/${restaurantId}/delete-restaurant/`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      if (response.status === 204) {\n        setRestaurants(prevRestaurants => prevRestaurants.filter(restaurant => restaurant.id !== restaurantId));\n      } else {\n        console.error('Unexpected response status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error deleting restaurant:', error);\n      alert('You are not authorized to delete this restaurant.');\n    }\n  };\n  const handleApiError = error => {\n    var _error$response, _error$response2;\n    console.error('API Error:', error);\n    const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403 ? 'Daily vote limit reached. Youâ€™ve already voted 3 times today.' : ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 400 ? 'An error occurred while processing your vote.' : 'An error occurred while voting.';\n    alert(errorMessage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Restaurants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total number of restaurants: \", restaurants.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"User Can Vote 3 Per Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading, please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"alert\",\n      children: [\"An error occurred: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newRestaurantName,\n        onChange: e => setNewRestaurantName(e.target.value),\n        placeholder: \"Restaurant Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddRestaurant,\n        children: \"Add Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in to add a restaurant or vote.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"restaurant-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sr.No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Restaurant Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Votes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Vote Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: restaurants.length > 0 ? restaurants.map((restaurant, index) => {\n          const userVote = userVotes[restaurant.id] || 'none';\n          const votePoints = {\n            'first': '1 point',\n            'second': '0.5 points',\n            'third': '0.25 points'\n          }[userVote] || 'Point';\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: restaurant.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: restaurant.user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: restaurant.total_votes || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: userVote.charAt(0).toUpperCase() + userVote.slice(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleVote(restaurant.id),\n                  children: [\"Vote \", votePoints]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/edit-restaurant/${restaurant.id}/`,\n                  className: \"LinkButton\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteRestaurant(restaurant.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true), !isAuthenticated && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Login to vote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)]\n          }, restaurant.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"6\",\n            children: \"No restaurants available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantList, \"NI1P/sWxFomYRW/EoBSk43+qp6Y=\", false, function () {\n  return [useNavigate];\n});\n_c = RestaurantList;\nexport default RestaurantList;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link, useNavigate } from 'react-router-dom';\n// import './RestaurantList.css'; // Import the CSS file\n\n// const API_BASE_URL = 'http://127.0.0.1:8000/api/';\n\n// const RestaurantList = () => {\n//   const [restaurants, setRestaurants] = useState([]);\n//   const [votesLeft, setVotesLeft] = useState(0);\n//   const [newRestaurantName, setNewRestaurantName] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [userVotes, setUserVotes] = useState({});\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Check authentication status and token\n//     const checkAuth = () => {\n//       const token = localStorage.getItem('access_token');\n//       setIsAuthenticated(!!token);\n//     };\n\n//     checkAuth();\n//   }, []);\n\n//   useEffect(() => {\n//     // Fetch restaurant data\n//     const fetchRestaurants = async () => {\n//       if (!isAuthenticated) return;\n\n//       try {\n//         const response = await axios.get(`${API_BASE_URL}restaurants/`, {\n//           headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n//         });\n\n//         const { restaurants, votesLeft: newVotesLeft } = response.data;\n//         setRestaurants(restaurants || []);\n//         setVotesLeft(newVotesLeft || 3);\n\n//         // Store user votes\n//         const votes = {};\n//         restaurants.forEach(restaurant => {\n//           votes[restaurant.id] = restaurant.user_vote || 'none';\n//         });\n//         setUserVotes(votes);\n//       } catch (error) {\n//         console.error('Error fetching restaurants:', error);\n//         setError('Error fetching restaurants');\n//         setRestaurants([]);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchRestaurants();\n//   }, [isAuthenticated]);\n\n//   const handleVote = async (restaurantId) => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: '/restaurants' } });\n//       return;\n//     }\n\n//     if (votesLeft <= 0) {\n//       alert('No votes left for today!');\n//       return;\n//     }\n\n//     const currentVoteValue = userVotes[restaurantId] || 'first';\n//     const voteOrder = ['first', 'second', 'third'];\n//     const nextVoteIndex = (voteOrder.indexOf(currentVoteValue) + 1) % 3;\n//     const nextVoteValue = voteOrder[nextVoteIndex];\n\n//     try {\n//       const response = await axios.post(`${API_BASE_URL}restaurants/vote/`,\n//         { restaurantId, voteType: nextVoteValue },\n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n\n//       const { restaurants, votesLeft: newVotesLeft } = response.data;\n\n//       setRestaurants(restaurants || []);\n//       setVotesLeft(newVotesLeft || votesLeft);\n//       setUserVotes(prevVotes => ({ ...prevVotes, [restaurantId]: nextVoteValue }));\n\n//       // Determine vote points\n//       const votePoints = {\n//         'first': '1 point',\n//         'second': '0.5 points',\n//         'third': '0.25 points'\n//       }[nextVoteValue] || 'unknown';\n\n//       alert(`You have updated your vote to ${votePoints}.`);\n\n//     } catch (error) {\n//       handleApiError(error);\n//     }\n//   };\n\n//   const handleAddRestaurant = async () => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: '/restaurants' } });\n//       return;\n//     }\n\n//     if (!newRestaurantName.trim()) {\n//       alert('Please enter a valid restaurant name.');\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(`${API_BASE_URL}restaurants/add_restaurant/`,\n//         { name: newRestaurantName.trim() },\n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n//       setRestaurants(prevRestaurants => [...prevRestaurants, response.data]);\n//       setNewRestaurantName('');\n//     } catch (error) {\n//       console.error('Error adding restaurant:', error);\n//       alert('An error occurred while adding the restaurant.');\n//     }\n//   };\n\n//   const handleDeleteRestaurant = async (restaurantId) => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: `/restaurants` } });\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.delete(`${API_BASE_URL}restaurants/${restaurantId}/delete-restaurant/`, {\n//         headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n//       });\n//       if (response.status === 204) {\n//         setRestaurants(prevRestaurants => prevRestaurants.filter(restaurant => restaurant.id !== restaurantId));\n//       } else {\n//         console.error('Unexpected response status:', response.status);\n//       }\n//     } catch (error) {\n//       console.error('Error deleting restaurant:', error);\n//       alert('You are not authorized to delete this restaurant.');\n//     }\n//   };\n\n//   const handleApiError = (error) => {\n//     console.error('API Error:', error);\n//     const errorMessage = error.response?.status === 403\n//       ? 'Daily vote limit reached. Youâ€™ve already voted 3 times today.'\n//       : error.response?.status === 400\n//       ? 'An error occurred while processing your vote.'\n//       : 'An error occurred while voting.';\n//     alert(errorMessage);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Restaurants</h1>\n//       <p>Total number of restaurants: {restaurants.length}</p>\n//       <p>Votes left for today: {votesLeft}</p>\n//       {loading && <p className=\"loading\">Loading, please wait...</p>}\n//       {error && <p className=\"alert\">An error occurred: {error}</p>}\n\n//       {isAuthenticated ? (\n//         <div className=\"input-container\">\n//           <h2>Add New Restaurant</h2>\n//           <input\n//             type=\"text\"\n//             value={newRestaurantName}\n//             onChange={(e) => setNewRestaurantName(e.target.value)}\n//             placeholder=\"Restaurant Name\"\n//           />\n//           <button onClick={handleAddRestaurant}>Add Restaurant</button>\n//         </div>\n//       ) : (\n//         <p>Please log in to add a restaurant or vote.</p>\n//       )}\n//       <ul>\n//         {restaurants.length > 0 ? (\n//           restaurants.map((restaurant, index) => {\n//             const userVote = userVotes[restaurant.id] || 'none';\n//             const votePoints = {\n//               'first': '1 point',\n//               'second': '0.5 points',\n//               'third': '0.25 points'\n//             }[userVote] || 'unknown';\n\n//             return (\n//               <li key={restaurant.id}>\n//                 <p>{index + 1}. {restaurant.name} - {restaurant.user.username} - Votes: {restaurant.total_votes || 0}</p>\n//                 <p>Vote Type: {userVote.charAt(0).toUpperCase() + userVote.slice(1)}</p>\n//                 {isAuthenticated ? (\n//                   <div>\n//                     <button onClick={() => handleVote(restaurant.id)}>\n//                       Vote {votePoints}\n//                     </button>\n//                     <Link to={`/edit-restaurant/${restaurant.id}/`} className=\"LinkButton\">Edit</Link>\n//                     <button onClick={() => handleDeleteRestaurant(restaurant.id)}>Delete</button>\n//                   </div>\n//                 ) : (\n//                   <p>Login to vote</p>\n//                 )}\n//               </li>\n//             );\n//           })\n//         ) : (\n//           <p>No restaurants available</p>\n//         )}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default RestaurantList;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link, useNavigate } from 'react-router-dom';\n// import './RestaurantList.css'; // Import the CSS file\n\n// const API_BASE_URL = 'http://127.0.0.1:8000/api/';\n\n// const RestaurantList = () => {\n//   const [restaurants, setRestaurants] = useState([]);\n//   const [votesLeft, setVotesLeft] = useState(0);\n//   const [newRestaurantName, setNewRestaurantName] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [currentVote, setCurrentVote] = useState({});\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Check authentication status and token\n//     const checkAuth = () => {\n//       const token = localStorage.getItem('access_token');\n//       setIsAuthenticated(!!token);\n//     };\n\n//     checkAuth();\n//   }, []);\n\n//   useEffect(() => {\n//     // Fetch restaurant data\n//     const fetchRestaurants = async () => {\n//       if (!isAuthenticated) return;\n\n//       try {\n//         const response = await axios.get(`${API_BASE_URL}restaurants/`, { \n//           headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } \n//         });\n\n//         const { restaurants, votesLeft: newVotesLeft } = response.data;\n\n//         setRestaurants(restaurants || []);\n//         setVotesLeft(newVotesLeft || 3);\n//       } catch (error) {\n//         console.error('Error fetching restaurants:', error);\n//         setError('Error fetching restaurants');\n//         setRestaurants([]);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchRestaurants();\n//   }, [isAuthenticated]);\n\n//   // RestaurantList.js\n//   const handleVote = async (restaurantId) => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: '/restaurants' } });\n//       return;\n//     }\n\n//     if (votesLeft <= 0) {\n//       alert('No votes left for today!');\n//       return;\n//     }\n\n//     const currentVoteValue = currentVote[restaurantId] || 'first';\n//     const voteOrder = ['first', 'second', 'third'];\n//     const nextVoteIndex = (voteOrder.indexOf(currentVoteValue) % 3) + 1;\n//     console.log(\"Calculation\",(voteOrder.indexOf(currentVoteValue) % 3) + 1)\n//     const nextVoteValue = voteOrder[nextVoteIndex];\n//     try {\n//       const response = await axios.post(`${API_BASE_URL}restaurants/vote/`,\n//         { restaurantId, voteType: currentVoteValue },\n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n\n//       const { restaurants, votesLeft: newVotesLeft } = response.data;\n\n//       setRestaurants(restaurants || []);\n//       setVotesLeft(newVotesLeft || votesLeft);\n//       setCurrentVote(prevVotes => ({ ...prevVotes, [restaurantId]: nextVoteValue }));\n\n//       // Determine vote points\n//       let votePoints = \"1 point\";\n//       console.log(\"CurrentVote\",currentVote[restaurantId])\n//       switch (currentVoteValue) {\n//         case 'first':\n//           votePoints = '1 point';\n//           break;\n//         case 'second':\n//           votePoints = '0.5 points';\n//           break;\n//         case 'third':\n//           votePoints = '0.25 points';\n//           break;\n//         default:\n//           votePoints = 'unknown';\n//       }\n\n//       // Adjust alert message based on current vote\n\n//       if (currentVoteValue === 'first') {\n//         alert(`You have cast a vote of ${votePoints}`);\n//       } else {\n//         alert(`You have updated your vote to ${votePoints}.`);\n//       }\n\n//     } catch (error) {\n//       handleApiError(error);\n//     }\n//   };\n\n//   const handleAddRestaurant = async () => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: '/restaurants' } });\n//       return;\n//     }\n\n//     if (!newRestaurantName.trim()) {\n//       alert('Please enter a valid restaurant name.');\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(`${API_BASE_URL}restaurants/add_restaurant/`, \n//         { name: newRestaurantName.trim() }, \n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n//       setRestaurants(prevRestaurants => [...prevRestaurants, response.data]);\n//       setNewRestaurantName('');\n//     } catch (error) {\n//       console.error('Error adding restaurant:', error);\n//       alert('An error occurred while adding the restaurant.');\n//     }\n//   };\n\n// const handleDeleteRestaurant = async (restaurantId) => {\n//   if (!isAuthenticated) {\n//     navigate('/login', { state: { from: `/restaurants` } });\n//     return;\n//   }\n\n//   try {\n//     const response = await axios.delete(`${API_BASE_URL}restaurants/${restaurantId}/delete-restaurant/`, {\n//       headers: {\n//         Authorization: `Bearer ${localStorage.getItem('access_token')}`\n//       }\n//     });\n//     if (response.status === 204) {\n//       setRestaurants(prevRestaurants => prevRestaurants.filter(restaurant => restaurant.id !== restaurantId));\n//     } else {\n//       console.error('Unexpected response status:', response.status);\n//     }\n//   } catch (error) {\n//     console.error('Error deleting restaurant:', error);\n//     alert('You are not authorized to delete this restaurant.');\n//   }\n// };\n\n//   const handleApiError = (error) => {\n//     console.error('API Error:', error);\n//     const errorMessage = error.response?.status === 403\n//       ? '\"Daily vote limit reached. Youâ€™ve already voted 3 times today.\"'\n//       : error.response?.status === 400\n//       ? 'An error occurred while processing your vote.'\n//       : 'An error occurred while voting.';\n//     alert(errorMessage);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Restaurants</h1>\n//       <p>Total number of restaurants: {restaurants.length}</p>\n//       <p>Vote left For Today {votesLeft}</p>\n//       {loading && <p className=\"loading\">Loading, please wait...</p>}\n//       {error && <p className=\"alert\">An error occurred: {error}</p>}\n\n//       {isAuthenticated ? (\n//         <div className=\"input-container\">\n//           <h2>Add New Restaurant</h2>\n//           <input \n//             type=\"text\" \n//             value={newRestaurantName} \n//             onChange={(e) => setNewRestaurantName(e.target.value)} \n//             placeholder=\"Restaurant Name\" \n//           />\n//           <button onClick={handleAddRestaurant}>Add Restaurant</button>\n//         </div>\n//       ) : (\n//         <p>Please log in to add a restaurant or vote.</p>\n//       )}\n//       <ul>\n//         {restaurants.length > 0 ? (\n//           restaurants.map((restaurant, index) => (\n//             <li key={restaurant.id}>\n//               <p>{index + 1}. {restaurant.name} - {restaurant.user.username} - Votes: {restaurant.total_votes || 0}</p>\n//               {isAuthenticated ? (\n//                 <div>\n//                   <button onClick={() => handleVote(restaurant.id)}>\n//                     Vote {currentVote[restaurant.id] === 'second' ? '0.5' : currentVote[restaurant.id] === 'third' ? '0.25' :  '1'}\n//                     {console.log(\"Current vote\",currentVote[restaurant.id])}\n//                   </button>\n//                   <Link to={`/edit-restaurant/${restaurant.id}/`} className=\"LinkButton\">Edit</Link>\n//                   <button onClick={() => handleDeleteRestaurant(restaurant.id)}>Delete</button>\n//                 </div>\n//               ) : (\n//                 <p>Login to vote</p>\n//               )}\n//             </li>\n//           ))\n//         ) : (\n//           <p>No restaurants available</p>\n//         )}\n//       </ul>\n//     </div>\n//   );\n// };\n// export default RestaurantList;\nvar _c;\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","RestaurantList","_s","restaurants","setRestaurants","votesLeft","setVotesLeft","newRestaurantName","setNewRestaurantName","error","setError","loading","setLoading","isAuthenticated","setIsAuthenticated","userVotes","setUserVotes","navigate","checkAuth","token","localStorage","getItem","fetchRestaurants","response","get","headers","Authorization","newVotesLeft","data","votes","forEach","restaurant","id","user_vote","console","handleVote","restaurantId","state","from","alert","currentVoteValue","voteOrder","nextVoteIndex","indexOf","nextVoteValue","post","voteType","log","prevVotes","votePoints","handleApiError","handleAddRestaurant","trim","name","prevRestaurants","handleDeleteRestaurant","delete","status","filter","_error$response","_error$response2","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","type","value","onChange","e","target","placeholder","onClick","map","index","userVote","user","username","total_votes","charAt","toUpperCase","slice","to","colSpan","_c","$RefreshReg$"],"sources":["/home/ts/Desktop/Fullstack Practice/GSO TASK/lunch-vote-frontend/src/components/RestaurantList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './RestaurantList.css'; // Import the CSS file\n\nconst API_BASE_URL = 'http://127.0.0.1:8000/api/';\n\nconst RestaurantList = () => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [votesLeft, setVotesLeft] = useState(0);\n  const [newRestaurantName, setNewRestaurantName] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userVotes, setUserVotes] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Check authentication status and token\n    const checkAuth = () => {\n      const token = localStorage.getItem('access_token');\n      setIsAuthenticated(!!token);\n    };\n\n    checkAuth();\n  }, []);\n\n  useEffect(() => {\n    // Fetch restaurant data\n    const fetchRestaurants = async () => {\n      if (!isAuthenticated) return;\n\n      try {\n        const response = await axios.get(`${API_BASE_URL}restaurants/`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n        });\n\n        const { restaurants, votesLeft: newVotesLeft } = response.data;\n        setRestaurants(restaurants || []);\n        setVotesLeft(newVotesLeft || 3);\n\n        // Store user votes\n        const votes = {};\n        restaurants.forEach(restaurant => {\n          votes[restaurant.id] = restaurant.user_vote || 'none';\n        });\n        setUserVotes(votes);\n      } catch (error) {\n        console.error('Error fetching restaurants:', error);\n        setError('Error fetching restaurants');\n        setRestaurants([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRestaurants();\n  }, [isAuthenticated]);\n\n  const handleVote = async (restaurantId) => {\n    if (!isAuthenticated) {\n      navigate('/login', { state: { from: '/restaurants' } });\n      return;\n    }\n\n    if (votesLeft <= 0) {\n      alert('No votes left for today!');\n      return;\n    }\n\n    const currentVoteValue = userVotes[restaurantId] || 'first';\n    const voteOrder = ['first', 'second', 'third'];\n    const nextVoteIndex = (voteOrder.indexOf(currentVoteValue) + 1) % 3;\n    const nextVoteValue = voteOrder[nextVoteIndex];\n\n    try {\n      const response = await axios.post(`${API_BASE_URL}restaurants/vote/`,\n        { restaurantId, voteType: nextVoteValue },\n        { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n      );\n\n      console.log\n\n      const { restaurants, votesLeft: newVotesLeft } = response.data;\n\n      setRestaurants(restaurants || []);\n      setVotesLeft(newVotesLeft || votesLeft);\n      setUserVotes(prevVotes => ({ ...prevVotes, [restaurantId]: nextVoteValue }));\n\n      // Determine vote points\n      const votePoints = {\n        'first': '1 point',\n        'second': '0.5 points',\n        'third': '0.25 points'\n      }[nextVoteValue] || 'unknown';\n\n      alert(`You have updated your vote to ${votePoints}.`);\n\n    } catch (error) {\n      handleApiError(error);\n    }\n  };\n\n  const handleAddRestaurant = async () => {\n    if (!isAuthenticated) {\n      navigate('/login', { state: { from: '/restaurants' } });\n      return;\n    }\n\n    if (!newRestaurantName.trim()) {\n      alert('Please enter a valid restaurant name.');\n      return;\n    }\n\n    try {\n      const response = await axios.post(`${API_BASE_URL}restaurants/add_restaurant/`,\n        { name: newRestaurantName.trim() },\n        { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n      );\n      setRestaurants(prevRestaurants => [...prevRestaurants, response.data]);\n      setNewRestaurantName('');\n    } catch (error) {\n      console.error('Error adding restaurant:', error);\n      alert('An error occurred while adding the restaurant.');\n    }\n  };\n\n  const handleDeleteRestaurant = async (restaurantId) => {\n    if (!isAuthenticated) {\n      navigate('/login', { state: { from: `/restaurants` } });\n      return;\n    }\n\n    try {\n      const response = await axios.delete(`${API_BASE_URL}restaurants/${restaurantId}/delete-restaurant/`, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n      });\n      if (response.status === 204) {\n        setRestaurants(prevRestaurants => prevRestaurants.filter(restaurant => restaurant.id !== restaurantId));\n      } else {\n        console.error('Unexpected response status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error deleting restaurant:', error);\n      alert('You are not authorized to delete this restaurant.');\n    }\n  };\n\n  const handleApiError = (error) => {\n    console.error('API Error:', error);\n    const errorMessage = error.response?.status === 403\n      ? 'Daily vote limit reached. Youâ€™ve already voted 3 times today.'\n      : error.response?.status === 400\n      ? 'An error occurred while processing your vote.'\n      : 'An error occurred while voting.';\n    alert(errorMessage);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Restaurants</h1>\n      <p>Total number of restaurants: {restaurants.length}</p>\n      <p>User Can Vote 3 Per Day</p>\n      {loading && <p className=\"loading\">Loading, please wait...</p>}\n      {error && <p className=\"alert\">An error occurred: {error}</p>}\n\n      {isAuthenticated ? (\n        <div className=\"input-container\">\n          <h2>Add New Restaurant</h2>\n          <input\n            type=\"text\"\n            value={newRestaurantName}\n            onChange={(e) => setNewRestaurantName(e.target.value)}\n            placeholder=\"Restaurant Name\"\n          />\n          <button onClick={handleAddRestaurant}>Add Restaurant</button>\n        </div>\n      ) : (\n        <p>Please log in to add a restaurant or vote.</p>\n      )}\n\n      <table className=\"restaurant-table\">\n        <thead>\n          <tr>\n            <th>Sr.No</th>\n            <th>Restaurant Name</th>\n            <th>User</th>\n            <th>Total Votes</th>\n            <th>Vote Type</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {restaurants.length > 0 ? (\n            restaurants.map((restaurant, index) => {\n              const userVote = userVotes[restaurant.id] || 'none';\n              const votePoints = {\n                'first': '1 point',\n                'second': '0.5 points',\n                'third': '0.25 points'\n              }[userVote] || 'Point';\n\n              return (\n                <tr key={restaurant.id}>\n                  <td>{index + 1}</td>\n                  <td>{restaurant.name}</td>\n                  <td>{restaurant.user.username}</td>\n                  <td>{restaurant.total_votes || 0}</td>\n                  <td>{userVote.charAt(0).toUpperCase() + userVote.slice(1)}</td>\n                  <td>\n                    {isAuthenticated && (\n                      <>\n                        <button onClick={() => handleVote(restaurant.id)}>\n                          Vote {votePoints}\n                        </button>\n                        <Link to={`/edit-restaurant/${restaurant.id}/`} className=\"LinkButton\">Edit</Link>\n                        <button onClick={() => handleDeleteRestaurant(restaurant.id)}>Delete</button>\n                      </>\n                    )}\n                    {!isAuthenticated && <p>Login to vote</p>}\n                  </td>\n                </tr>\n              );\n            })\n          ) : (\n            <tr>\n              <td colSpan=\"6\">No restaurants available</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default RestaurantList;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link, useNavigate } from 'react-router-dom';\n// import './RestaurantList.css'; // Import the CSS file\n\n// const API_BASE_URL = 'http://127.0.0.1:8000/api/';\n\n// const RestaurantList = () => {\n//   const [restaurants, setRestaurants] = useState([]);\n//   const [votesLeft, setVotesLeft] = useState(0);\n//   const [newRestaurantName, setNewRestaurantName] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [userVotes, setUserVotes] = useState({});\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Check authentication status and token\n//     const checkAuth = () => {\n//       const token = localStorage.getItem('access_token');\n//       setIsAuthenticated(!!token);\n//     };\n\n//     checkAuth();\n//   }, []);\n\n//   useEffect(() => {\n//     // Fetch restaurant data\n//     const fetchRestaurants = async () => {\n//       if (!isAuthenticated) return;\n\n//       try {\n//         const response = await axios.get(`${API_BASE_URL}restaurants/`, {\n//           headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n//         });\n\n//         const { restaurants, votesLeft: newVotesLeft } = response.data;\n//         setRestaurants(restaurants || []);\n//         setVotesLeft(newVotesLeft || 3);\n\n//         // Store user votes\n//         const votes = {};\n//         restaurants.forEach(restaurant => {\n//           votes[restaurant.id] = restaurant.user_vote || 'none';\n//         });\n//         setUserVotes(votes);\n//       } catch (error) {\n//         console.error('Error fetching restaurants:', error);\n//         setError('Error fetching restaurants');\n//         setRestaurants([]);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchRestaurants();\n//   }, [isAuthenticated]);\n\n//   const handleVote = async (restaurantId) => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: '/restaurants' } });\n//       return;\n//     }\n\n//     if (votesLeft <= 0) {\n//       alert('No votes left for today!');\n//       return;\n//     }\n\n//     const currentVoteValue = userVotes[restaurantId] || 'first';\n//     const voteOrder = ['first', 'second', 'third'];\n//     const nextVoteIndex = (voteOrder.indexOf(currentVoteValue) + 1) % 3;\n//     const nextVoteValue = voteOrder[nextVoteIndex];\n\n//     try {\n//       const response = await axios.post(`${API_BASE_URL}restaurants/vote/`,\n//         { restaurantId, voteType: nextVoteValue },\n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n\n//       const { restaurants, votesLeft: newVotesLeft } = response.data;\n\n//       setRestaurants(restaurants || []);\n//       setVotesLeft(newVotesLeft || votesLeft);\n//       setUserVotes(prevVotes => ({ ...prevVotes, [restaurantId]: nextVoteValue }));\n\n//       // Determine vote points\n//       const votePoints = {\n//         'first': '1 point',\n//         'second': '0.5 points',\n//         'third': '0.25 points'\n//       }[nextVoteValue] || 'unknown';\n\n//       alert(`You have updated your vote to ${votePoints}.`);\n\n//     } catch (error) {\n//       handleApiError(error);\n//     }\n//   };\n\n//   const handleAddRestaurant = async () => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: '/restaurants' } });\n//       return;\n//     }\n\n//     if (!newRestaurantName.trim()) {\n//       alert('Please enter a valid restaurant name.');\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(`${API_BASE_URL}restaurants/add_restaurant/`,\n//         { name: newRestaurantName.trim() },\n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n//       setRestaurants(prevRestaurants => [...prevRestaurants, response.data]);\n//       setNewRestaurantName('');\n//     } catch (error) {\n//       console.error('Error adding restaurant:', error);\n//       alert('An error occurred while adding the restaurant.');\n//     }\n//   };\n\n//   const handleDeleteRestaurant = async (restaurantId) => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: `/restaurants` } });\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.delete(`${API_BASE_URL}restaurants/${restaurantId}/delete-restaurant/`, {\n//         headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n//       });\n//       if (response.status === 204) {\n//         setRestaurants(prevRestaurants => prevRestaurants.filter(restaurant => restaurant.id !== restaurantId));\n//       } else {\n//         console.error('Unexpected response status:', response.status);\n//       }\n//     } catch (error) {\n//       console.error('Error deleting restaurant:', error);\n//       alert('You are not authorized to delete this restaurant.');\n//     }\n//   };\n\n//   const handleApiError = (error) => {\n//     console.error('API Error:', error);\n//     const errorMessage = error.response?.status === 403\n//       ? 'Daily vote limit reached. Youâ€™ve already voted 3 times today.'\n//       : error.response?.status === 400\n//       ? 'An error occurred while processing your vote.'\n//       : 'An error occurred while voting.';\n//     alert(errorMessage);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Restaurants</h1>\n//       <p>Total number of restaurants: {restaurants.length}</p>\n//       <p>Votes left for today: {votesLeft}</p>\n//       {loading && <p className=\"loading\">Loading, please wait...</p>}\n//       {error && <p className=\"alert\">An error occurred: {error}</p>}\n\n//       {isAuthenticated ? (\n//         <div className=\"input-container\">\n//           <h2>Add New Restaurant</h2>\n//           <input\n//             type=\"text\"\n//             value={newRestaurantName}\n//             onChange={(e) => setNewRestaurantName(e.target.value)}\n//             placeholder=\"Restaurant Name\"\n//           />\n//           <button onClick={handleAddRestaurant}>Add Restaurant</button>\n//         </div>\n//       ) : (\n//         <p>Please log in to add a restaurant or vote.</p>\n//       )}\n//       <ul>\n//         {restaurants.length > 0 ? (\n//           restaurants.map((restaurant, index) => {\n//             const userVote = userVotes[restaurant.id] || 'none';\n//             const votePoints = {\n//               'first': '1 point',\n//               'second': '0.5 points',\n//               'third': '0.25 points'\n//             }[userVote] || 'unknown';\n\n//             return (\n//               <li key={restaurant.id}>\n//                 <p>{index + 1}. {restaurant.name} - {restaurant.user.username} - Votes: {restaurant.total_votes || 0}</p>\n//                 <p>Vote Type: {userVote.charAt(0).toUpperCase() + userVote.slice(1)}</p>\n//                 {isAuthenticated ? (\n//                   <div>\n//                     <button onClick={() => handleVote(restaurant.id)}>\n//                       Vote {votePoints}\n//                     </button>\n//                     <Link to={`/edit-restaurant/${restaurant.id}/`} className=\"LinkButton\">Edit</Link>\n//                     <button onClick={() => handleDeleteRestaurant(restaurant.id)}>Delete</button>\n//                   </div>\n//                 ) : (\n//                   <p>Login to vote</p>\n//                 )}\n//               </li>\n//             );\n//           })\n//         ) : (\n//           <p>No restaurants available</p>\n//         )}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default RestaurantList;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link, useNavigate } from 'react-router-dom';\n// import './RestaurantList.css'; // Import the CSS file\n\n// const API_BASE_URL = 'http://127.0.0.1:8000/api/';\n\n// const RestaurantList = () => {\n//   const [restaurants, setRestaurants] = useState([]);\n//   const [votesLeft, setVotesLeft] = useState(0);\n//   const [newRestaurantName, setNewRestaurantName] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [currentVote, setCurrentVote] = useState({});\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Check authentication status and token\n//     const checkAuth = () => {\n//       const token = localStorage.getItem('access_token');\n//       setIsAuthenticated(!!token);\n//     };\n\n//     checkAuth();\n//   }, []);\n\n//   useEffect(() => {\n//     // Fetch restaurant data\n//     const fetchRestaurants = async () => {\n//       if (!isAuthenticated) return;\n\n//       try {\n//         const response = await axios.get(`${API_BASE_URL}restaurants/`, { \n//           headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } \n//         });\n\n//         const { restaurants, votesLeft: newVotesLeft } = response.data;\n\n//         setRestaurants(restaurants || []);\n//         setVotesLeft(newVotesLeft || 3);\n//       } catch (error) {\n//         console.error('Error fetching restaurants:', error);\n//         setError('Error fetching restaurants');\n//         setRestaurants([]);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchRestaurants();\n//   }, [isAuthenticated]);\n\n//   // RestaurantList.js\n//   const handleVote = async (restaurantId) => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: '/restaurants' } });\n//       return;\n//     }\n  \n//     if (votesLeft <= 0) {\n//       alert('No votes left for today!');\n//       return;\n//     }\n  \n//     const currentVoteValue = currentVote[restaurantId] || 'first';\n//     const voteOrder = ['first', 'second', 'third'];\n//     const nextVoteIndex = (voteOrder.indexOf(currentVoteValue) % 3) + 1;\n//     console.log(\"Calculation\",(voteOrder.indexOf(currentVoteValue) % 3) + 1)\n//     const nextVoteValue = voteOrder[nextVoteIndex];\n//     try {\n//       const response = await axios.post(`${API_BASE_URL}restaurants/vote/`,\n//         { restaurantId, voteType: currentVoteValue },\n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n  \n//       const { restaurants, votesLeft: newVotesLeft } = response.data;\n  \n//       setRestaurants(restaurants || []);\n//       setVotesLeft(newVotesLeft || votesLeft);\n//       setCurrentVote(prevVotes => ({ ...prevVotes, [restaurantId]: nextVoteValue }));\n  \n//       // Determine vote points\n//       let votePoints = \"1 point\";\n//       console.log(\"CurrentVote\",currentVote[restaurantId])\n//       switch (currentVoteValue) {\n//         case 'first':\n//           votePoints = '1 point';\n//           break;\n//         case 'second':\n//           votePoints = '0.5 points';\n//           break;\n//         case 'third':\n//           votePoints = '0.25 points';\n//           break;\n//         default:\n//           votePoints = 'unknown';\n//       }\n  \n//       // Adjust alert message based on current vote\n\n//       if (currentVoteValue === 'first') {\n//         alert(`You have cast a vote of ${votePoints}`);\n//       } else {\n//         alert(`You have updated your vote to ${votePoints}.`);\n//       }\n  \n//     } catch (error) {\n//       handleApiError(error);\n//     }\n//   };\n  \n\n  \n//   const handleAddRestaurant = async () => {\n//     if (!isAuthenticated) {\n//       navigate('/login', { state: { from: '/restaurants' } });\n//       return;\n//     }\n\n//     if (!newRestaurantName.trim()) {\n//       alert('Please enter a valid restaurant name.');\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(`${API_BASE_URL}restaurants/add_restaurant/`, \n//         { name: newRestaurantName.trim() }, \n//         { headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` } }\n//       );\n//       setRestaurants(prevRestaurants => [...prevRestaurants, response.data]);\n//       setNewRestaurantName('');\n//     } catch (error) {\n//       console.error('Error adding restaurant:', error);\n//       alert('An error occurred while adding the restaurant.');\n//     }\n//   };\n\n// const handleDeleteRestaurant = async (restaurantId) => {\n//   if (!isAuthenticated) {\n//     navigate('/login', { state: { from: `/restaurants` } });\n//     return;\n//   }\n\n//   try {\n//     const response = await axios.delete(`${API_BASE_URL}restaurants/${restaurantId}/delete-restaurant/`, {\n//       headers: {\n//         Authorization: `Bearer ${localStorage.getItem('access_token')}`\n//       }\n//     });\n//     if (response.status === 204) {\n//       setRestaurants(prevRestaurants => prevRestaurants.filter(restaurant => restaurant.id !== restaurantId));\n//     } else {\n//       console.error('Unexpected response status:', response.status);\n//     }\n//   } catch (error) {\n//     console.error('Error deleting restaurant:', error);\n//     alert('You are not authorized to delete this restaurant.');\n//   }\n// };\n\n//   const handleApiError = (error) => {\n//     console.error('API Error:', error);\n//     const errorMessage = error.response?.status === 403\n//       ? '\"Daily vote limit reached. Youâ€™ve already voted 3 times today.\"'\n//       : error.response?.status === 400\n//       ? 'An error occurred while processing your vote.'\n//       : 'An error occurred while voting.';\n//     alert(errorMessage);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Restaurants</h1>\n//       <p>Total number of restaurants: {restaurants.length}</p>\n//       <p>Vote left For Today {votesLeft}</p>\n//       {loading && <p className=\"loading\">Loading, please wait...</p>}\n//       {error && <p className=\"alert\">An error occurred: {error}</p>}\n\n//       {isAuthenticated ? (\n//         <div className=\"input-container\">\n//           <h2>Add New Restaurant</h2>\n//           <input \n//             type=\"text\" \n//             value={newRestaurantName} \n//             onChange={(e) => setNewRestaurantName(e.target.value)} \n//             placeholder=\"Restaurant Name\" \n//           />\n//           <button onClick={handleAddRestaurant}>Add Restaurant</button>\n//         </div>\n//       ) : (\n//         <p>Please log in to add a restaurant or vote.</p>\n//       )}\n//       <ul>\n//         {restaurants.length > 0 ? (\n//           restaurants.map((restaurant, index) => (\n//             <li key={restaurant.id}>\n//               <p>{index + 1}. {restaurant.name} - {restaurant.user.username} - Votes: {restaurant.total_votes || 0}</p>\n//               {isAuthenticated ? (\n//                 <div>\n//                   <button onClick={() => handleVote(restaurant.id)}>\n//                     Vote {currentVote[restaurant.id] === 'second' ? '0.5' : currentVote[restaurant.id] === 'third' ? '0.25' :  '1'}\n//                     {console.log(\"Current vote\",currentVote[restaurant.id])}\n//                   </button>\n//                   <Link to={`/edit-restaurant/${restaurant.id}/`} className=\"LinkButton\">Edit</Link>\n//                   <button onClick={() => handleDeleteRestaurant(restaurant.id)}>Delete</button>\n//                 </div>\n//               ) : (\n//                 <p>Login to vote</p>\n//               )}\n//             </li>\n//           ))\n//         ) : (\n//           <p>No restaurants available</p>\n//         )}\n//       </ul>\n//     </div>\n//   );\n// };\n// export default RestaurantList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/B,MAAMC,YAAY,GAAG,4BAA4B;AAEjD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAMyB,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACd;IACA,MAAM2B,SAAS,GAAGA,CAAA,KAAM;MACtB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAClDP,kBAAkB,CAAC,CAAC,CAACK,KAAK,CAAC;IAC7B,CAAC;IAEDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN3B,SAAS,CAAC,MAAM;IACd;IACA,MAAM+B,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI,CAACT,eAAe,EAAE;MAEtB,IAAI;QACF,MAAMU,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,GAAGxB,YAAY,cAAc,EAAE;UAC9DyB,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;UAAG;QAC7E,CAAC,CAAC;QAEF,MAAM;UAAElB,WAAW;UAAEE,SAAS,EAAEsB;QAAa,CAAC,GAAGJ,QAAQ,CAACK,IAAI;QAC9DxB,cAAc,CAACD,WAAW,IAAI,EAAE,CAAC;QACjCG,YAAY,CAACqB,YAAY,IAAI,CAAC,CAAC;;QAE/B;QACA,MAAME,KAAK,GAAG,CAAC,CAAC;QAChB1B,WAAW,CAAC2B,OAAO,CAACC,UAAU,IAAI;UAChCF,KAAK,CAACE,UAAU,CAACC,EAAE,CAAC,GAAGD,UAAU,CAACE,SAAS,IAAI,MAAM;QACvD,CAAC,CAAC;QACFjB,YAAY,CAACa,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOpB,KAAK,EAAE;QACdyB,OAAO,CAACzB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDC,QAAQ,CAAC,4BAA4B,CAAC;QACtCN,cAAc,CAAC,EAAE,CAAC;MACpB,CAAC,SAAS;QACRQ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDU,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACT,eAAe,CAAC,CAAC;EAErB,MAAMsB,UAAU,GAAG,MAAOC,YAAY,IAAK;IACzC,IAAI,CAACvB,eAAe,EAAE;MACpBI,QAAQ,CAAC,QAAQ,EAAE;QAAEoB,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAe;MAAE,CAAC,CAAC;MACvD;IACF;IAEA,IAAIjC,SAAS,IAAI,CAAC,EAAE;MAClBkC,KAAK,CAAC,0BAA0B,CAAC;MACjC;IACF;IAEA,MAAMC,gBAAgB,GAAGzB,SAAS,CAACqB,YAAY,CAAC,IAAI,OAAO;IAC3D,MAAMK,SAAS,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;IAC9C,MAAMC,aAAa,GAAG,CAACD,SAAS,CAACE,OAAO,CAACH,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC;IACnE,MAAMI,aAAa,GAAGH,SAAS,CAACC,aAAa,CAAC;IAE9C,IAAI;MACF,MAAMnB,QAAQ,GAAG,MAAM9B,KAAK,CAACoD,IAAI,CAAC,GAAG7C,YAAY,mBAAmB,EAClE;QAAEoC,YAAY;QAAEU,QAAQ,EAAEF;MAAc,CAAC,EACzC;QAAEnB,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;QAAG;MAAE,CACjF,CAAC;MAEDa,OAAO,CAACa,GAAG;MAEX,MAAM;QAAE5C,WAAW;QAAEE,SAAS,EAAEsB;MAAa,CAAC,GAAGJ,QAAQ,CAACK,IAAI;MAE9DxB,cAAc,CAACD,WAAW,IAAI,EAAE,CAAC;MACjCG,YAAY,CAACqB,YAAY,IAAItB,SAAS,CAAC;MACvCW,YAAY,CAACgC,SAAS,KAAK;QAAE,GAAGA,SAAS;QAAE,CAACZ,YAAY,GAAGQ;MAAc,CAAC,CAAC,CAAC;;MAE5E;MACA,MAAMK,UAAU,GAAG;QACjB,OAAO,EAAE,SAAS;QAClB,QAAQ,EAAE,YAAY;QACtB,OAAO,EAAE;MACX,CAAC,CAACL,aAAa,CAAC,IAAI,SAAS;MAE7BL,KAAK,CAAC,iCAAiCU,UAAU,GAAG,CAAC;IAEvD,CAAC,CAAC,OAAOxC,KAAK,EAAE;MACdyC,cAAc,CAACzC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAM0C,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI,CAACtC,eAAe,EAAE;MACpBI,QAAQ,CAAC,QAAQ,EAAE;QAAEoB,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAe;MAAE,CAAC,CAAC;MACvD;IACF;IAEA,IAAI,CAAC/B,iBAAiB,CAAC6C,IAAI,CAAC,CAAC,EAAE;MAC7Bb,KAAK,CAAC,uCAAuC,CAAC;MAC9C;IACF;IAEA,IAAI;MACF,MAAMhB,QAAQ,GAAG,MAAM9B,KAAK,CAACoD,IAAI,CAAC,GAAG7C,YAAY,6BAA6B,EAC5E;QAAEqD,IAAI,EAAE9C,iBAAiB,CAAC6C,IAAI,CAAC;MAAE,CAAC,EAClC;QAAE3B,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;QAAG;MAAE,CACjF,CAAC;MACDjB,cAAc,CAACkD,eAAe,IAAI,CAAC,GAAGA,eAAe,EAAE/B,QAAQ,CAACK,IAAI,CAAC,CAAC;MACtEpB,oBAAoB,CAAC,EAAE,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdyB,OAAO,CAACzB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD8B,KAAK,CAAC,gDAAgD,CAAC;IACzD;EACF,CAAC;EAED,MAAMgB,sBAAsB,GAAG,MAAOnB,YAAY,IAAK;IACrD,IAAI,CAACvB,eAAe,EAAE;MACpBI,QAAQ,CAAC,QAAQ,EAAE;QAAEoB,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAe;MAAE,CAAC,CAAC;MACvD;IACF;IAEA,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAM9B,KAAK,CAAC+D,MAAM,CAAC,GAAGxD,YAAY,eAAeoC,YAAY,qBAAqB,EAAE;QACnGX,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;QAAG;MAC7E,CAAC,CAAC;MACF,IAAIE,QAAQ,CAACkC,MAAM,KAAK,GAAG,EAAE;QAC3BrD,cAAc,CAACkD,eAAe,IAAIA,eAAe,CAACI,MAAM,CAAC3B,UAAU,IAAIA,UAAU,CAACC,EAAE,KAAKI,YAAY,CAAC,CAAC;MACzG,CAAC,MAAM;QACLF,OAAO,CAACzB,KAAK,CAAC,6BAA6B,EAAEc,QAAQ,CAACkC,MAAM,CAAC;MAC/D;IACF,CAAC,CAAC,OAAOhD,KAAK,EAAE;MACdyB,OAAO,CAACzB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD8B,KAAK,CAAC,mDAAmD,CAAC;IAC5D;EACF,CAAC;EAED,MAAMW,cAAc,GAAIzC,KAAK,IAAK;IAAA,IAAAkD,eAAA,EAAAC,gBAAA;IAChC1B,OAAO,CAACzB,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IAClC,MAAMoD,YAAY,GAAG,EAAAF,eAAA,GAAAlD,KAAK,CAACc,QAAQ,cAAAoC,eAAA,uBAAdA,eAAA,CAAgBF,MAAM,MAAK,GAAG,GAC/C,+DAA+D,GAC/D,EAAAG,gBAAA,GAAAnD,KAAK,CAACc,QAAQ,cAAAqC,gBAAA,uBAAdA,gBAAA,CAAgBH,MAAM,MAAK,GAAG,GAC9B,+CAA+C,GAC/C,iCAAiC;IACrClB,KAAK,CAACsB,YAAY,CAAC;EACrB,CAAC;EAED,oBACEhE,OAAA;IAAKiE,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlE,OAAA;MAAAkE,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBtE,OAAA;MAAAkE,QAAA,GAAG,+BAA6B,EAAC5D,WAAW,CAACiE,MAAM;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxDtE,OAAA;MAAAkE,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC7BxD,OAAO,iBAAId,OAAA;MAAGiE,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC7D1D,KAAK,iBAAIZ,OAAA;MAAGiE,SAAS,EAAC,OAAO;MAAAC,QAAA,GAAC,qBAAmB,EAACtD,KAAK;IAAA;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE5DtD,eAAe,gBACdhB,OAAA;MAAKiE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BlE,OAAA;QAAAkE,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BtE,OAAA;QACEwE,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE/D,iBAAkB;QACzBgE,QAAQ,EAAGC,CAAC,IAAKhE,oBAAoB,CAACgE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACtDI,WAAW,EAAC;MAAiB;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFtE,OAAA;QAAQ8E,OAAO,EAAExB,mBAAoB;QAAAY,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,gBAENtE,OAAA;MAAAkE,QAAA,EAAG;IAA0C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjD,eAEDtE,OAAA;MAAOiE,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBACjClE,OAAA;QAAAkE,QAAA,eACElE,OAAA;UAAAkE,QAAA,gBACElE,OAAA;YAAAkE,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdtE,OAAA;YAAAkE,QAAA,EAAI;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxBtE,OAAA;YAAAkE,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbtE,OAAA;YAAAkE,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBtE,OAAA;YAAAkE,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBtE,OAAA;YAAAkE,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRtE,OAAA;QAAAkE,QAAA,EACG5D,WAAW,CAACiE,MAAM,GAAG,CAAC,GACrBjE,WAAW,CAACyE,GAAG,CAAC,CAAC7C,UAAU,EAAE8C,KAAK,KAAK;UACrC,MAAMC,QAAQ,GAAG/D,SAAS,CAACgB,UAAU,CAACC,EAAE,CAAC,IAAI,MAAM;UACnD,MAAMiB,UAAU,GAAG;YACjB,OAAO,EAAE,SAAS;YAClB,QAAQ,EAAE,YAAY;YACtB,OAAO,EAAE;UACX,CAAC,CAAC6B,QAAQ,CAAC,IAAI,OAAO;UAEtB,oBACEjF,OAAA;YAAAkE,QAAA,gBACElE,OAAA;cAAAkE,QAAA,EAAKc,KAAK,GAAG;YAAC;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpBtE,OAAA;cAAAkE,QAAA,EAAKhC,UAAU,CAACsB;YAAI;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1BtE,OAAA;cAAAkE,QAAA,EAAKhC,UAAU,CAACgD,IAAI,CAACC;YAAQ;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnCtE,OAAA;cAAAkE,QAAA,EAAKhC,UAAU,CAACkD,WAAW,IAAI;YAAC;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtCtE,OAAA;cAAAkE,QAAA,EAAKe,QAAQ,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGL,QAAQ,CAACM,KAAK,CAAC,CAAC;YAAC;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC/DtE,OAAA;cAAAkE,QAAA,GACGlD,eAAe,iBACdhB,OAAA,CAAAE,SAAA;gBAAAgE,QAAA,gBACElE,OAAA;kBAAQ8E,OAAO,EAAEA,CAAA,KAAMxC,UAAU,CAACJ,UAAU,CAACC,EAAE,CAAE;kBAAA+B,QAAA,GAAC,OAC3C,EAACd,UAAU;gBAAA;kBAAAe,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC,eACTtE,OAAA,CAACH,IAAI;kBAAC2F,EAAE,EAAE,oBAAoBtD,UAAU,CAACC,EAAE,GAAI;kBAAC8B,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAClFtE,OAAA;kBAAQ8E,OAAO,EAAEA,CAAA,KAAMpB,sBAAsB,CAACxB,UAAU,CAACC,EAAE,CAAE;kBAAA+B,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA,eAC7E,CACH,EACA,CAACtD,eAAe,iBAAIhB,OAAA;gBAAAkE,QAAA,EAAG;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC;UAAA,GAjBEpC,UAAU,CAACC,EAAE;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAkBlB,CAAC;QAET,CAAC,CAAC,gBAEFtE,OAAA;UAAAkE,QAAA,eACElE,OAAA;YAAIyF,OAAO,EAAC,GAAG;YAAAvB,QAAA,EAAC;UAAwB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C;MACL;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACjE,EAAA,CAlOID,cAAc;EAAA,QAQDN,WAAW;AAAA;AAAA4F,EAAA,GARxBtF,cAAc;AAoOpB,eAAeA,cAAc;;AAe7B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAkBA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAsF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}