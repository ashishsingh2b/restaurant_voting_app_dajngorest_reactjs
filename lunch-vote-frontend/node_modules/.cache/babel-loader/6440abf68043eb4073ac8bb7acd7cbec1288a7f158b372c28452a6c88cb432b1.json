{"ast":null,"code":"var _jsxFileName = \"/home/ts/Desktop/Fullstack Practice/GSO TASK/lunch-vote-frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate(); // Use useNavigate for redirection\n\n  const handleLogin = e => {\n    e.preventDefault();\n    // Simulate login\n    // In a real application, you should check credentials and handle authentication\n    if (username && password) {\n      // Set authentication state or token here\n      navigate('/'); // Redirect to homepage after successful login\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: headingStyle,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: formGroupStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: labelStyle,\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: inputStyle,\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: formGroupStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: labelStyle,\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: inputStyle,\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n// Styles for the container, form, and input elements\n_s(Login, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nconst containerStyle = {\n  textAlign: 'center',\n  margin: '40px auto',\n  padding: '20px',\n  width: '80%',\n  maxWidth: '400px',\n  backgroundColor: '#f9f9f9',\n  borderRadius: '8px',\n  border: '1px solid #ddd'\n};\nconst headingStyle = {\n  fontSize: '2em',\n  color: '#333',\n  marginBottom: '20px'\n};\nconst formGroupStyle = {\n  marginBottom: '15px'\n};\nconst labelStyle = {\n  display: 'block',\n  marginBottom: '5px'\n};\nconst inputStyle = {\n  width: '100%',\n  padding: '8px',\n  borderRadius: '4px',\n  border: '1px solid #ddd'\n};\nconst buttonStyle = {\n  fontSize: '1.1em',\n  color: '#fff',\n  backgroundColor: '#007bff',\n  border: 'none',\n  padding: '10px 20px',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  transition: 'background-color 0.3s ease'\n};\nexport default Login;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     try {\n//       const response = await axios.post('http://127.0.0.1:8000/api/restaurants/login/', { username, password });\n//       localStorage.setItem('access_token', response.data.access);\n//       localStorage.setItem('refresh_token', response.data.refresh);\n//       navigate('/');\n//     } catch (error) {\n//       console.error('Error logging in', error);\n//       alert('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Login</h1>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//           placeholder=\"Username\"\n//         />\n//         <input\n//           type=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           placeholder=\"Password\"\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","navigate","handleLogin","e","preventDefault","style","containerStyle","children","headingStyle","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","formGroupStyle","labelStyle","htmlFor","inputStyle","type","id","value","onChange","target","buttonStyle","_c","textAlign","margin","padding","width","maxWidth","backgroundColor","borderRadius","border","fontSize","color","marginBottom","display","cursor","transition","$RefreshReg$"],"sources":["/home/ts/Desktop/Fullstack Practice/GSO TASK/lunch-vote-frontend/src/components/Login.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate(); // Use useNavigate for redirection\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    // Simulate login\n    // In a real application, you should check credentials and handle authentication\n    if (username && password) {\n      // Set authentication state or token here\n      navigate('/'); // Redirect to homepage after successful login\n    }\n  };\n\n  return (\n    <div style={containerStyle}>\n      <h1 style={headingStyle}>Login</h1>\n      <form onSubmit={handleLogin}>\n        <div style={formGroupStyle}>\n          <label style={labelStyle} htmlFor=\"username\">Username:</label>\n          <input\n            style={inputStyle}\n            type=\"text\"\n            id=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div style={formGroupStyle}>\n          <label style={labelStyle} htmlFor=\"password\">Password:</label>\n          <input\n            style={inputStyle}\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button style={buttonStyle} type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\n// Styles for the container, form, and input elements\nconst containerStyle = {\n  textAlign: 'center',\n  margin: '40px auto',\n  padding: '20px',\n  width: '80%',\n  maxWidth: '400px',\n  backgroundColor: '#f9f9f9',\n  borderRadius: '8px',\n  border: '1px solid #ddd',\n};\n\nconst headingStyle = {\n  fontSize: '2em',\n  color: '#333',\n  marginBottom: '20px',\n};\n\nconst formGroupStyle = {\n  marginBottom: '15px',\n};\n\nconst labelStyle = {\n  display: 'block',\n  marginBottom: '5px',\n};\n\nconst inputStyle = {\n  width: '100%',\n  padding: '8px',\n  borderRadius: '4px',\n  border: '1px solid #ddd',\n};\n\nconst buttonStyle = {\n  fontSize: '1.1em',\n  color: '#fff',\n  backgroundColor: '#007bff',\n  border: 'none',\n  padding: '10px 20px',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  transition: 'background-color 0.3s ease',\n};\n\nexport default Login;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     try {\n//       const response = await axios.post('http://127.0.0.1:8000/api/restaurants/login/', { username, password });\n//       localStorage.setItem('access_token', response.data.access);\n//       localStorage.setItem('refresh_token', response.data.refresh);\n//       navigate('/');\n//     } catch (error) {\n//       console.error('Error logging in', error);\n//       alert('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Login</h1>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//           placeholder=\"Username\"\n//         />\n//         <input\n//           type=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           placeholder=\"Password\"\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}