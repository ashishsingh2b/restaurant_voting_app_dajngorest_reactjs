{"ast":null,"code":"\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     try {\n//       const response = await axios.post('http://127.0.0.1:8000/api/restaurants/login/', { username, password });\n//       localStorage.setItem('access_token', response.data.access);\n//       localStorage.setItem('refresh_token', response.data.refresh);\n//       navigate('/');\n//     } catch (error) {\n//       console.error('Error logging in', error);\n//       alert('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <style>\n//         {`\n//           .login-container {\n//             display: flex;\n//             flex-direction: column;\n//             align-items: center;\n//             padding: 20px;\n//             background-color: #f5f5f5;\n//             min-height: 100vh; /* Ensures the container covers the full viewport height */\n//           }\n\n//           .form-wrapper {\n//             display: flex;\n//             flex-direction: column;\n//             align-items: center;\n//             justify-content: flex-start; /* Aligns form to the top */\n//             margin-top: 20px; /* Space between top of viewport and form */\n//             width: 100%;\n//             max-width: 400px; /* Maximum width for the form */\n//           }\n\n//           .login-container h1 {\n//             margin-bottom: 20px;\n//             font-size: 2rem;\n//             color: #333;\n//           }\n\n//           .login-form {\n//             background: #fff;\n//             padding: 20px;\n//             border-radius: 8px;\n//             box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n//             width: 100%;\n//           }\n\n//           .login-form input,\n//           .login-form button {\n//             width: 100%;\n//             padding: 12px;\n//             margin-bottom: 10px;\n//             margin-left:1px;\n//             border: 1px solid #ccc;\n//             border-radius: 4px;\n//             font-size: 1rem;\n//             box-sizing: border-box; /* Ensures padding and border are included in width/height */\n//             height: 48px; /* Explicitly set height for consistency */\n//           }\n\n//           .login-form input {\n//             border-color: #ccc;\n//           }\n\n//           .login-form button {\n//             background-color: #007bff;\n//             border: none;\n//             color: white;\n//             cursor: pointer;\n//           }\n\n//           .login-form button:hover {\n//             background-color: #0056b3;\n//           }\n//         `}\n//       </style>\n//       <div className=\"login-container\">\n//         <div className=\"form-wrapper\">\n//           <h1>Login</h1>\n//           <form onSubmit={handleSubmit} className=\"login-form\">\n//             <input\n//               type=\"text\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               placeholder=\"Username\"\n//             />\n//             <input\n//               type=\"password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               placeholder=\"Password\"\n//             />\n//             <button type=\"submit\">Login</button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["/home/ts/Desktop/Fullstack Practice/GSO TASK/lunch-vote-frontend/src/components/Login.js"],"sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     try {\n//       const response = await axios.post('http://127.0.0.1:8000/api/restaurants/login/', { username, password });\n//       localStorage.setItem('access_token', response.data.access);\n//       localStorage.setItem('refresh_token', response.data.refresh);\n//       navigate('/');\n//     } catch (error) {\n//       console.error('Error logging in', error);\n//       alert('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <style>\n//         {`\n//           .login-container {\n//             display: flex;\n//             flex-direction: column;\n//             align-items: center;\n//             padding: 20px;\n//             background-color: #f5f5f5;\n//             min-height: 100vh; /* Ensures the container covers the full viewport height */\n//           }\n\n//           .form-wrapper {\n//             display: flex;\n//             flex-direction: column;\n//             align-items: center;\n//             justify-content: flex-start; /* Aligns form to the top */\n//             margin-top: 20px; /* Space between top of viewport and form */\n//             width: 100%;\n//             max-width: 400px; /* Maximum width for the form */\n//           }\n\n//           .login-container h1 {\n//             margin-bottom: 20px;\n//             font-size: 2rem;\n//             color: #333;\n//           }\n\n//           .login-form {\n//             background: #fff;\n//             padding: 20px;\n//             border-radius: 8px;\n//             box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n//             width: 100%;\n//           }\n\n//           .login-form input,\n//           .login-form button {\n//             width: 100%;\n//             padding: 12px;\n//             margin-bottom: 10px;\n//             margin-left:1px;\n//             border: 1px solid #ccc;\n//             border-radius: 4px;\n//             font-size: 1rem;\n//             box-sizing: border-box; /* Ensures padding and border are included in width/height */\n//             height: 48px; /* Explicitly set height for consistency */\n//           }\n\n//           .login-form input {\n//             border-color: #ccc;\n//           }\n\n//           .login-form button {\n//             background-color: #007bff;\n//             border: none;\n//             color: white;\n//             cursor: pointer;\n//           }\n\n//           .login-form button:hover {\n//             background-color: #0056b3;\n//           }\n//         `}\n//       </style>\n//       <div className=\"login-container\">\n//         <div className=\"form-wrapper\">\n//           <h1>Login</h1>\n//           <form onSubmit={handleSubmit} className=\"login-form\">\n//             <input\n//               type=\"text\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               placeholder=\"Username\"\n//             />\n//             <input\n//               type=\"password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               placeholder=\"Password\"\n//             />\n//             <button type=\"submit\">Login</button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\n"],"mappings":";;AAcignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}